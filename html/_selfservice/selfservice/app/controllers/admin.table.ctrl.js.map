{"version":3,"sources":["../../../_itsm_default_v2_template/app/controllers/admin.table.ctrl.js"],"names":["angular","module","controller","AdminTableController","$inject","$rootScope","$scope","$uibModalInstance","SWSessionService","wssHelpers","wssLogging","tableSchema","getTableSettings","adminModalSchema","tableData","adminModalContent","$on","event","args","isDefined","responseType","adminModalNew","insertTableSettings","responseEditor","then","response","close","error","toastType","toastBody","toastTitle","sendToast","dismiss","updateTableSettings","resetTableSettings","AsyncButtonsController","buttonArgs","onSubmit","editor","getValue","recordPage","$broadcast","onCancel","onReset","confirm"],"mappings":"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","file":"admin.table.ctrl.js","sourcesContent":["(function () {\r\n    'use strict';\r\n    angular\r\n        .module('swSelfService')\r\n        .controller('AdminTableController', AdminTableController);\r\n\r\n    AdminTableController.$inject = ['$rootScope', '$scope','$uibModalInstance','SWSessionService','wssHelpers', 'wssLogging'];\r\n    function AdminTableController($rootScope, $scope, $uibModalInstance, SWSessionService, wssHelpers, wssLogging)\r\n    {\r\n      $scope.tableSchema = wssHelpers.getTableSettings($rootScope.adminModalSchema);\r\n      $scope.tableData = wssHelpers.getTableSettings($rootScope.adminModalContent);\r\n\r\n      $scope.$on('AdminTableModalComplete', function(event, args) {\r\n        if( angular.isDefined(args.responseType) && args.responseType === 'submit') {\r\n          if(angular.isDefined($rootScope.adminModalNew) && $rootScope.adminModalNew){\r\n            wssHelpers.insertTableSettings($rootScope.adminModalContent, args.responseEditor).then(function(response){\r\n              $rootScope.adminModalNew = false;\r\n              $uibModalInstance.close(args.responseType);\r\n            }, function(error){\r\n              var toastType = \"error\";\r\n              var toastBody = \"Unable to add the configuration for this table.\";\r\n              var toastTitle = \"Table Configuration Error!\";\r\n              wssLogging.sendToast(toastType, toastBody, toastTitle);\r\n              $uibModalInstance.dismiss('cancel');\r\n            });\r\n          } else {\r\n            wssHelpers.updateTableSettings($rootScope.adminModalContent, args.responseEditor).then(function(response){\r\n              $uibModalInstance.close(args.responseType);\r\n            }, function(error){\r\n              var toastType = \"error\";\r\n              var toastBody = \"Unable to add the configuration for this table.\";\r\n              var toastTitle = \"Table Configuration Error!\";\r\n              wssLogging.sendToast(toastType, toastBody, toastTitle);\r\n              $uibModalInstance.dismiss('cancel');\r\n            });\r\n          }\r\n        } else if( angular.isDefined(args.responseType) && args.responseType === 'reset') {\r\n          wssHelpers.resetTableSettings($rootScope.adminModalContent).then(function(response){\r\n            $uibModalInstance.close(args.responseType);\r\n          }, function(error){\r\n            var toastType = \"error\";\r\n            var toastBody = 'Unable to reset the configuration for this table to its default settings.';\r\n            var toastTitle = \"Table Configuration Error!\";\r\n            wssLogging.sendToast(toastType, toastBody, toastTitle);\r\n            $uibModalInstance.dismiss('cancel');\r\n          });\r\n        } else {\r\n          $uibModalInstance.dismiss('cancel');\r\n        }\r\n      });\r\n    }\r\n\r\n    //Customer-Filtered Request List Controller\r\n    angular\r\n        .module('swSelfService')\r\n        .controller('AsyncButtonsController', AsyncButtonsController);\r\n    AsyncButtonsController.$inject = ['$rootScope','$scope'];\r\n    function AsyncButtonsController($rootScope, $scope)\r\n    {\r\n\r\n      var buttonArgs = [];\r\n\r\n      $scope.onSubmit = function () {\r\n        buttonArgs.responseType = 'submit';\r\n        buttonArgs.responseEditor = $scope.editor.getValue();\r\n        buttonArgs.recordPage = $rootScope.adminModalContent;\r\n        $rootScope.$broadcast('AdminTableModalComplete', buttonArgs);\r\n      };\r\n\r\n      $scope.onCancel = function() {\r\n        buttonArgs.responseType = 'cancel';\r\n        buttonArgs.recordPage = $rootScope.adminModalContent;\r\n        $rootScope.$broadcast('AdminTableModalComplete', buttonArgs);\r\n      };\r\n\r\n      $scope.onReset = function() {\r\n        if(confirm(\"This will reset the configuration of this table to its default settings. Do you wish to continue?\")){\r\n          buttonArgs.responseType = 'reset';\r\n          buttonArgs.recordPage = $rootScope.adminModalContent;\r\n          $rootScope.$broadcast('AdminTableModalComplete', buttonArgs);\r\n        }\r\n      };\r\n    }\r\n})();\r\n"]}