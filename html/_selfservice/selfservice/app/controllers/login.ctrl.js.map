{"version":3,"sources":["../../../_itsm_default_v2_template/app/controllers/login.ctrl.js"],"names":["angular","module","controller","LoginController","$inject","$scope","SWSessionService","$state","loggingIn","images","wssBranding","loginImage","isDefined","sspConfig","length","getSSPSetup","then","ssConfig","ssoEnabled","go","ssError","$on"],"mappings":"AAAA,CAAC,YAAY;AACT;;AACAA,UACKC,MADL,CACY,eADZ,EAEKC,UAFL,CAEgB,iBAFhB,EAEmCC,eAFnC;;AAIAA,kBAAgBC,OAAhB,GAA0B,CAAC,QAAD,EAAU,kBAAV,EAA6B,QAA7B,CAA1B;;AAEA,WAASD,eAAT,CAAyBE,MAAzB,EAAiCC,gBAAjC,EAAmDC,MAAnD,EACA;AACE;AACAF,WAAOG,SAAP,GAAmB,KAAnB;AACAH,WAAOI,MAAP,GAAgBC,YAAYC,UAA5B;;AAEA,QAAG,CAACX,QAAQY,SAAR,CAAkBN,iBAAiBO,SAAnC,CAAD,IAAmDP,iBAAiBO,SAAjB,CAA2BC,MAA3B,IAAqC,CAA3F,EAA6F;AAC3FR,uBAAiBS,WAAjB,GAA+BC,IAA/B,CAAoC,UAASC,QAAT,EAAkB;AACpD,YAAGjB,QAAQY,SAAR,CAAkBK,SAASC,UAA3B,CAAH,EAA0C;AACxC,cAAGD,SAASC,UAAT,KAAwB,IAA3B,EAAgC;AAC9BX,mBAAOY,EAAP,CAAU,UAAV;AACD,WAFD,MAEO;AACLZ,mBAAOY,EAAP,CAAU,aAAV;AACD;AACF,SAND,MAMO;AACLZ,iBAAOY,EAAP,CAAU,aAAV;AACD;AACF,OAVD,EAUG,UAASC,OAAT,EAAiB;AAClBb,eAAOY,EAAP,CAAU,OAAV;AACD,OAZD;AAaD,KAdD,MAcO;AACL,UAAGnB,QAAQY,SAAR,CAAkBN,iBAAiBO,SAAjB,CAA2BK,UAA7C,KAA4DZ,iBAAiBO,SAAjB,CAA2BK,UAA3B,KAA0C,IAAzG,EAA8G;AAC5GX,eAAOY,EAAP,CAAU,UAAV;AACD,OAFD,MAEO;AACLZ,eAAOY,EAAP,CAAU,aAAV;AACD;AACF;;AAGD;AACAd,WAAOgB,GAAP,CAAW,QAAX,EAAoB,YAAU;AAC9B;AACC,KAFD;AAGD;AAEJ,CA3CD","file":"login.ctrl.js","sourcesContent":["(function () {\r\n    'use strict';\r\n    angular\r\n        .module('swSelfService')\r\n        .controller('LoginController', LoginController);\r\n\r\n    LoginController.$inject = ['$scope','SWSessionService','$state'];\r\n\r\n    function LoginController($scope, SWSessionService, $state)\r\n    {\r\n      //$scope.loggingIn allows the tracking of when a customer has clicked the Login button, to when the login process has finished.\r\n      $scope.loggingIn = false;\r\n      $scope.images = wssBranding.loginImage;\r\n\r\n      if(!angular.isDefined(SWSessionService.sspConfig ) || SWSessionService.sspConfig.length == 0){\r\n        SWSessionService.getSSPSetup().then(function(ssConfig){\r\n          if(angular.isDefined(ssConfig.ssoEnabled)){\r\n            if(ssConfig.ssoEnabled === true){\r\n              $state.go('loginsso');\r\n            } else {\r\n              $state.go('loginmanual');\r\n            }\r\n          } else {\r\n            $state.go('loginmanual');\r\n          }\r\n        }, function(ssError){\r\n          $state.go('login');\r\n        });\r\n      } else {\r\n        if(angular.isDefined(SWSessionService.sspConfig.ssoEnabled) && SWSessionService.sspConfig.ssoEnabled === true){\r\n          $state.go('loginsso');\r\n        } else {\r\n          $state.go('loginmanual');\r\n        }\r\n      }\r\n\r\n\r\n      //Watch for logout broadcast to clean up session-specific data ready for a new user\r\n      $scope.$on('logout',function(){\r\n      //  SWSessionService = {};\r\n      });\r\n    }\r\n\r\n})();\r\n"]}