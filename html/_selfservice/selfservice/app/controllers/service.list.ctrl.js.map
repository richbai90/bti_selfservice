{"version":3,"sources":["../../../_itsm_default_v2_template/app/controllers/service.list.ctrl.js"],"names":["angular","module","controller","ServiceListCtrl","$inject","$rootScope","$scope","$q","$state","SWSessionService","wssHelpers","ServicesService","ServiceCategoryService","paginationService","store","$uibModal","wssLogging","$window","GlobalSearchService","serviceListSelect","custServices","catServ","catTreeData","servicesLoading","selectedService","pageNo","windowWidth","innerWidth","accStatus","closeOthers","detailsOpen","activeRequest","closeRequest","selectedCategory","selectCategory","row","col","currCat","_categories","categories","selected","addServicesToCategories","services","i","length","Array","isArray","children","reduce","acc","service","pk_config_type","content","push","getAllCustServices","checkActiveSession","then","getCustServices","getCatTreeData","cat","hasOwnProperty","parentlabel","open","deferred","defer","getTreeData","response","resolve","promise","firstOpen","getCategorySize","Math","floor","openCategoryTree","size","openCategoryModal","modalInstance","animation","templateUrl","items","treeDataModal","currBranch","currTreeBranch","objTree","result","selectedItem","isDefined","data","category","swValue","uid","clearCategory","clearSearch","search","clearSearchwell","setCurrentPage","getNextPage","pageNum","selectedRequest","setGlobalSearch","listType","globalSearchString","getPagedServices","getCustFaveServices","selectCategoryGroup","evt","stopPropagation","setServiceListSelect","servList","getDetails","serviceId","getServiceDetails","objServDetails","rowData","serviceDetails","details","error","getActiveRequest","objRequest","RequestActive","getCloseRequest","RequestClose","selectService","subscribeSection","ownDetailsSection","displayOwnDetails","go","serviceName","vsb_title","serviceID","fk_cmdb_id","isFav","favServices","addFav","subsId","servId","addCustomerFavourite","toastType","toastBody","toastTitle","sendToast","delFav","delCustomerFavourite","canRaiseIncident","flg_allow_support","canLogCall","canRaiseRequest","flg_allow_request","hasWebflag","raiseRequest","requestClass","remove","dfId","dfClass","fk_df_support","fk_df_onreq","fk_df_onsub","dataFormID","dataFormClass","getSubscriptionRecord","subs_id","objSubscription","subscription","set","logger","$on"],"mappings":"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","file":"service.list.ctrl.js","sourcesContent":["(function () {\r\n  'use strict';\r\n\r\n  //Main Services List controller\r\n  angular\r\n    .module('swSelfService')\r\n    .controller('ServiceListCtrl', ServiceListCtrl);\r\n  ServiceListCtrl.$inject = ['$rootScope', '$scope', '$q', '$state', 'SWSessionService', 'wssHelpers', 'ServicesService', 'ServiceCategoryService', 'paginationService', 'store', '$uibModal', 'wssLogging', '$window', 'GlobalSearchService'];\r\n  function ServiceListCtrl($rootScope, $scope, $q, $state, SWSessionService, wssHelpers, ServicesService, ServiceCategoryService, paginationService, store, $uibModal, wssLogging, $window, GlobalSearchService) {\r\n    $scope.serviceListSelect = 'cust';\r\n    $scope.custServices = ServicesService;\r\n    $scope.catServ = ServiceCategoryService;\r\n    $scope.catTreeData = [];\r\n    $scope.custServices.servicesLoading = false;\r\n    $scope.custServices.selectedService = null;\r\n    $scope.custServices.pageNo = 1;\r\n    $scope.windowWidth = $window.innerWidth;\r\n\r\n    //Accordion Settings for side panel\r\n    $scope.accStatus = {\r\n      closeOthers: false,\r\n      detailsOpen: false,\r\n      activeRequest: false,\r\n      closeRequest: false\r\n    };\r\n    //\r\n    // //Check session, if active then get paged services\r\n    // SWSessionService.checkActiveSession().then(function(){\r\n    //   $scope.custServices.getPagedServices();\r\n    // }, function(){\r\n    //   //\r\n    // });\r\n\r\n    let selectedCategory = [0, 0];\r\n    $scope.selectCategory = function (row, col) {\r\n      $scope.currCat = _categories[row][col];\r\n      $scope.categories[selectedCategory[0]][selectedCategory[1]].selected = false;\r\n      $scope.categories[row][col].selected = true;\r\n      selectedCategory = [row, col];\r\n    };\r\n\r\n    const _categories = [];\r\n    let catTreeData = [];\r\n\r\n    function addServicesToCategories(categories, services) {\r\n      for (let i = 0; i < categories.length; i++) {\r\n        if (Array.isArray(categories[i])) {\r\n          addServicesToCategories(categories[i], services);\r\n        } else {\r\n          if (categories[i].children.length > 0) {\r\n            addServicesToCategories(categories[i].children, services);\r\n          }\r\n\r\n          categories[i].services = services.reduce(function (acc, service) {\r\n            if (service.pk_config_type === categories[i].content) {\r\n              acc.push(service);\r\n            }\r\n\r\n            return acc;\r\n          }, []);\r\n        }\r\n      }\r\n    }\r\n\r\n    //Check session, if active then get all services\r\n    $scope.getAllCustServices = () => {\r\n      SWSessionService.checkActiveSession().then(() => {\r\n        ServicesService.getCustServices().then(services => {\r\n          getCatTreeData().then(categories => {\r\n            _categories.push(categories.reduce((acc, cat) => {\r\n              if (!cat.hasOwnProperty('children')) {\r\n                cat.children = [];\r\n              }\r\n              if (cat.parentlabel === '') {\r\n                cat.open = true;\r\n                cat.selected = false;\r\n                if (acc.length < 6) {\r\n                  acc.push(cat);\r\n                } else {\r\n                  _categories.push(acc);\r\n                  acc = [];\r\n                  acc.push(cat);\r\n                }\r\n              }\r\n              return acc;\r\n            }, []));\r\n            addServicesToCategories(_categories, services);\r\n            $scope.categories = _categories;\r\n          });\r\n        });\r\n      });\r\n    };\r\n\r\n\r\n    function getCatTreeData() {\r\n      const deferred = $q.defer();\r\n      if (catTreeData.length === 0) {\r\n        $scope.catServ.getTreeData().then(function (response) {\r\n          catTreeData = response;\r\n          deferred.resolve(catTreeData);\r\n        });\r\n      } else {\r\n        deferred.resolve(catTreeData);\r\n      }\r\n      return deferred.promise;\r\n    }\r\n\r\n    $scope.firstOpen = true;\r\n\r\n    $scope.getCategorySize = function (categories) {\r\n      return Math.floor(12 / categories.length);\r\n    };\r\n\r\n    $scope.getCatTreeData = function () {\r\n      let deferred = $q.defer();\r\n      if ($scope.catTreeData.length === 0) {\r\n        $scope.catServ.getTreeData().then(function (response) {\r\n          $scope.catTreeData = response;\r\n          deferred.resolve($scope.catTreeData)\r\n        })\r\n      } else {\r\n        deferred.resolve($scope.catTreeData)\r\n      }\r\n      return deferred.promise;\r\n    };\r\n\r\n    // Setup Modal for Service Category selector\r\n    $scope.openCategoryTree = function (size) {\r\n      $scope.catServ.getTreeData().then(function (response) {\r\n        $scope.catTreeData = response;\r\n        $scope.openCategoryModal(size);\r\n      });\r\n    };\r\n\r\n    $scope.openCategoryModal = function (size) {\r\n      let modalInstance = $uibModal.open({\r\n        animation: true,\r\n        templateUrl: 'templates/services/services.searchwell.categorytree.tpl.html',\r\n        controller: 'ModalTreeCtrl',\r\n        size: size,\r\n        resolve: {\r\n          items: function () {\r\n            $scope.treeDataModal = [];\r\n            $scope.treeDataModal.currBranch = $scope.currTreeBranch;\r\n            $scope.treeDataModal.objTree = $scope.catTreeData;\r\n            return $scope.treeDataModal;\r\n          }\r\n        }\r\n      });\r\n\r\n      modalInstance.result.then(function (selectedItem) {\r\n        if (angular.isDefined(selectedItem.data)) {\r\n          $scope.custServices.category = selectedItem.data.swValue;\r\n          $scope.currTreeBranch = selectedItem.uid;\r\n        }\r\n      }, function () {\r\n        //Modal Dismissed\r\n      });\r\n    };\r\n\r\n    $scope.clearCategory = function () {\r\n      $scope.custServices.category = \"\";\r\n    };\r\n\r\n    $scope.clearSearch = function () {\r\n      $scope.custServices.search = \"\";\r\n    };\r\n\r\n    $scope.clearSearchwell = function () {\r\n      paginationService.setCurrentPage('servicePage', 1);\r\n      $scope.clearCategory();\r\n      $scope.clearSearch();\r\n    };\r\n\r\n    $scope.getNextPage = function (pageNum) {\r\n      $scope.custServices.selectedRequest = null;\r\n      $scope.custServices.pageNo = pageNum;\r\n    };\r\n\r\n    $scope.setGlobalSearch = function () {\r\n      $scope.custServices.listType = 'cust';\r\n      $scope.custServices.search = GlobalSearchService.globalSearchString;\r\n      $scope.custServices.getPagedServices();\r\n    };\r\n    //\r\n\r\n    $scope.getCustFaveServices = function () {\r\n      SWSessionService.checkActiveSession().then(function () {\r\n        $scope.custServices.listType = 'fav';\r\n        $scope.custServices.getPagedServices();\r\n      });\r\n    };\r\n\r\n    $scope.selectCategoryGroup = function (cat, evt) {\r\n      cat.open = !cat.open;\r\n      evt.stopPropagation();\r\n    };\r\n\r\n\r\n    $scope.setServiceListSelect = function (servList) {\r\n      $scope.clearSearchwell();\r\n      SWSessionService.checkActiveSession().then(function () {\r\n        $scope.custServices.listType = servList;\r\n        $scope.custServices.getPagedServices();\r\n      });\r\n    };\r\n\r\n    $scope.getDetails = function (serviceId) {\r\n      //Calling to the getServiceDetails from the services.service\r\n      $scope.custServices.getServiceDetails(serviceId).then(\r\n        function (objServDetails) {\r\n          if (objServDetails.rowData) {\r\n            if (objServDetails.rowData.row) {\r\n              $scope.serviceDetails = objServDetails.rowData.row.details;\r\n            }\r\n            else {\r\n              $scope.serviceDetails = \"\";\r\n            }\r\n          }\r\n          else {\r\n            $scope.serviceDetails = \"\";\r\n          }\r\n        },\r\n        function (error) {\r\n          //\r\n        });\r\n    };\r\n\r\n    $scope.getActiveRequest = function (serviceId) {\r\n      //Calling to the activeRequest from the services.service\r\n      $scope.custServices.activeRequest(serviceId).then(\r\n        function (objRequest) {\r\n          $scope.RequestActive = objRequest;\r\n        },\r\n        function (error) {\r\n          //console.log(\"Not active request associated to this service\");\r\n        }\r\n      );\r\n    };\r\n\r\n    $scope.getCloseRequest = function (serviceId) {\r\n      //Calling to the closeRequest from the services.service\r\n      $scope.custServices.closeRequest(serviceId).then(\r\n        function (objRequest) {\r\n          $scope.RequestClose = objRequest;\r\n        },\r\n        function (error) {\r\n          //console.log(\"Not closed request associated to this service\");\r\n        }\r\n      );\r\n    };\r\n\r\n    $scope.selectService = function (service) {\r\n      $scope.custServices.selectedService = service;\r\n      $scope.accStatus = {\r\n        closeOthers: false,\r\n        detailsOpen: false,\r\n        activeRequest: false,\r\n        closeRequest: false\r\n      };\r\n    };\r\n\r\n    $scope.subscribeSection = function () {\r\n\r\n      return $scope.custServices.listType === 'unsub';\r\n\r\n\r\n    };\r\n\r\n    $scope.ownDetailsSection = function () {\r\n\r\n      return $scope.custServices.listType === 'own';\r\n\r\n\r\n    };\r\n\r\n    $scope.displayOwnDetails = function (service) {\r\n\r\n      if ($scope.custServices.listType === 'own') {\r\n        $state.go('servicedetails', { serviceName: service.vsb_title, serviceID: service.fk_cmdb_id });\r\n      }\r\n    };\r\n\r\n    $scope.isFav = function (serviceId) {\r\n      return angular.isDefined($scope.custServices.favServices) && $scope.custServices.favServices[serviceId] === true;\r\n\r\n    };\r\n\r\n    $scope.addFav = function (subsId, servId) {\r\n      $scope.custServices.addCustomerFavourite(subsId, servId).then(function (response) {\r\n      }, function (error) {\r\n        let toastType = \"error\";\r\n        let toastBody = 'Adding this Service to your list of favourites failed.';\r\n        let toastTitle = \"Service Favourite Failed!\";\r\n        wssLogging.sendToast(toastType, toastBody, toastTitle);\r\n      });\r\n    };\r\n\r\n    $scope.delFav = function (servId) {\r\n      $scope.custServices.delCustomerFavourite(servId).then(function () {\r\n      }, function (error) {\r\n        let toastType = \"error\";\r\n        let toastBody = 'Removing this Service from your list of favourites failed.';\r\n        let toastTitle = \"Service Favourite Failed!\";\r\n        wssLogging.sendToast(toastType, toastBody, toastTitle);\r\n      });\r\n    };\r\n\r\n    $scope.canRaiseIncident = function (service) {\r\n      return (service.flg_allow_support === '1' &&\r\n      $scope.canLogCall() &&\r\n      $scope.custServices.listType !== 'own' &&\r\n      $scope.custServices.listType !== 'unsub');\r\n    };\r\n\r\n    $scope.canRaiseRequest = function (service) {\r\n      return (service.flg_allow_request === '1' &&\r\n      $scope.canLogCall() &&\r\n      $scope.custServices.listType !== 'own' &&\r\n      $scope.custServices.listType !== 'unsub');\r\n    };\r\n    //\r\n    // $scope.canAddFav = function () {\r\n    //   return ($scope.custServices.listType !== 'own' &&\r\n    //   $scope.custServices.listType !== 'unsub');\r\n    // };\r\n    //\r\n    $scope.canLogCall = function () {\r\n      return wssHelpers.hasWebflag('OPTION_CAN_LOG_CALLS');\r\n    };\r\n    //\r\n    $scope.raiseRequest = function (service, requestClass) {\r\n      store.remove(\"currDataForm\");\r\n      let dfId = '0';\r\n      let dfClass = '';\r\n      switch (requestClass) {\r\n        case \"Incident\":\r\n          if (angular.isDefined(service.fk_df_support) && service.fk_df_support > 0) {\r\n            dfId = service.fk_df_support;\r\n            dfClass = requestClass;\r\n          }\r\n          break;\r\n        case \"Service Request\":\r\n          if (angular.isDefined(service.fk_df_onreq) && service.fk_df_onreq > 0) {\r\n            dfId = service.fk_df_onreq;\r\n            dfClass = requestClass;\r\n          }\r\n          break;\r\n        case \"Subscription\":\r\n          if (angular.isDefined(service.fk_df_onsub) && service.fk_df_onsub > 0) {\r\n            dfId = service.fk_df_onsub;\r\n            dfClass = requestClass;\r\n          }\r\n          break;\r\n      }\r\n      $rootScope.dataFormID = dfId;\r\n      $rootScope.dataFormClass = dfClass;\r\n      if (dfId !== '0') {\r\n        //Get subscription details\r\n        $scope.custServices.getSubscriptionRecord(service.subs_id).then(function (objSubscription) {\r\n          let objRequest = {\r\n            dataFormID: dfId,\r\n            requestClass: dfClass,\r\n            serviceDetails: service,\r\n            subscription: objSubscription\r\n          };\r\n          store.set(\"currDataForm\", objRequest);\r\n          $state.go('requestwizard');\r\n        });\r\n      } else {\r\n        wssLogging.logger('No Wizard has been set up for this Service [' + service.vsb_title + ']. Please contact your Service Desk with the name of the Service to report this configuration issue.', \"ERROR\", \"ServiceListCtrl::raiseRequest\", false, true, \"Request Wizard Error!\");\r\n      }\r\n    };\r\n\r\n    //Watch for logout broadcast to clean up session-specific data ready for a new user\r\n    $scope.$on('logout', function () {\r\n      $scope.custServices = {};\r\n    });\r\n\r\n  }\r\n})();\r\n"]}