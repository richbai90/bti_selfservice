{"version":3,"sources":["../../../_itsm_default_v2_template/app/controllers/password.ctrl.js"],"names":["angular","module","controller","PasswordController","$inject","$scope","SWSessionService","$state","$stateParams","wssLogging","instance","selfServiceInstance","token","images","wssBranding","loginImage","resetPassword","newUser","document","querySelector","value","newPassword","newConfirmPassword","toastType","toastBody","toastTitle","sendToast","resetCustomer_Password","go","reload"],"mappings":"AAAA,CAAC,YAAY;AACT;;AACAA,UACKC,MADL,CACY,eADZ,EAEKC,UAFL,CAEgB,oBAFhB,EAEsCC,kBAFtC;;AAIAA,qBAAmBC,OAAnB,GAA6B,CAAC,QAAD,EAAU,kBAAV,EAA6B,QAA7B,EAAsC,cAAtC,EAAqD,YAArD,CAA7B;AACA,WAASD,kBAAT,CAA4BE,MAA5B,EAAoCC,gBAApC,EAAsDC,MAAtD,EAA8DC,YAA9D,EAA4EC,UAA5E,EACA;;AAEEJ,WAAOK,QAAP,GAAkBJ,iBAAiBK,mBAAnC;AACAN,WAAOO,KAAP,GAAeJ,aAAaI,KAA5B;AACAP,WAAOQ,MAAP,GAAgBC,YAAYC,UAA5B;;AAEAV,WAAOW,aAAP,GAAuB,YAAY;AACjC,UAAIC,UAAUC,SAASC,aAAT,CAAwB,aAAxB,EAAwCC,KAAtD;AACA,UAAIC,cAAcH,SAASC,aAAT,CAAwB,iBAAxB,EAA4CC,KAA9D;AACA,UAAIE,qBAAqBJ,SAASC,aAAT,CAAwB,kBAAxB,EAA6CC,KAAtE;;AAEA,UAAIC,eAAeC,kBAAnB,EAAsC;AACpC,YAAIC,YAAY,OAAhB;AACA,YAAIC,YAAY,6BAAhB;AACA,YAAIC,aAAa,oBAAjB;AACAhB,mBAAWiB,SAAX,CAAqBH,SAArB,EAAgCC,SAAhC,EAA2CC,UAA3C;AACD,OALD,MAOK;AACHnB,yBAAiBqB,sBAAjB,CAAwCtB,OAAOK,QAA/C,EAAyDO,OAAzD,EAAkEZ,OAAOO,KAAzE,EAAgFS,WAAhF;AACAd,eAAOqB,EAAP,CAAU,OAAV,EAAmB,EAAChB,OAAO,EAAR,EAAnB,EAAgC,EAACiB,QAAQ,IAAT,EAAhC;AACD;AACF,KAhBD;AAiBD;AAEJ,CAjCD","file":"password.ctrl.js","sourcesContent":["(function () {\r\n    'use strict';\r\n    angular\r\n        .module('swSelfService')\r\n        .controller('PasswordController', PasswordController);\r\n\r\n    PasswordController.$inject = ['$scope','SWSessionService','$state','$stateParams','wssLogging'];\r\n    function PasswordController($scope, SWSessionService, $state, $stateParams, wssLogging)\r\n    {\r\n\r\n      $scope.instance = SWSessionService.selfServiceInstance;\r\n      $scope.token = $stateParams.token;\r\n      $scope.images = wssBranding.loginImage;\r\n\r\n      $scope.resetPassword = function () {\r\n        var newUser = document.querySelector( '#reset-user' ).value;\r\n        var newPassword = document.querySelector( '#reset-password' ).value;\r\n        var newConfirmPassword = document.querySelector( '#confirmpassword' ).value;\r\n\r\n        if (newPassword != newConfirmPassword){\r\n          var toastType = \"error\";\r\n          var toastBody = 'The passwords do not match.';\r\n          var toastTitle = \"Password mismatch!\";\r\n          wssLogging.sendToast(toastType, toastBody, toastTitle);\r\n        }\r\n\r\n        else {\r\n          SWSessionService.resetCustomer_Password($scope.instance, newUser, $scope.token, newPassword);\r\n          $state.go('login', {token: \"\"}, {reload: true});\r\n        }\r\n      };\r\n    }\r\n\r\n})();\r\n"]}