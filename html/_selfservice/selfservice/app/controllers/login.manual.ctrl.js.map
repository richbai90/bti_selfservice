{"version":3,"sources":["../../../_itsm_default_v2_template/app/controllers/login.manual.ctrl.js"],"names":["angular","module","controller","LoginManualController","$inject","$scope","$rootScope","SWSessionService","$state","store","RequestService","wssLogging","$location","$window","loggingIn","images","wssBranding","loginImage","sessServ","screenWidth","innerWidth","login","formPassword","document","querySelector","username","value","then","sessionData","getSelfServiceConfig","wssConfig","get","getCustomerDetails","ac_id","custDetails","getAuthCount","response","numAuths","objNewCustDetails","authCount","set","stateBefore","goToPath","substring","indexOf","lastIndexOf","newPath","path","go","error","toastType","toastBody","toastTitle","sendToast","requestPassword","requestResetCustomerPassword","responseRequest","isDefined","sspConfig","ssoEnabled","$on"],"mappings":"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","file":"login.manual.ctrl.js","sourcesContent":["(function () {\r\n    'use strict';\r\n    angular\r\n        .module('swSelfService')\r\n        .controller('LoginManualController', LoginManualController);\r\n\r\n    LoginManualController.$inject = ['$scope','$rootScope','SWSessionService','$state','store','RequestService','wssLogging', '$location','$window'];\r\n\r\n    function LoginManualController($scope, $rootScope, SWSessionService, $state, store, RequestService, wssLogging, $location, $window)\r\n    {\r\n      //$scope.loggingIn allows the tracking of when a customer has clicked the Login button, to when the login process has finished.\r\n      $scope.loggingIn = false;\r\n      $scope.images = wssBranding.loginImage;\r\n      $scope.sessServ = SWSessionService;\r\n      $scope.screenWidth = $window.innerWidth;\r\n\r\n      $scope.login = function () {\r\n        $scope.loggingIn = true;\r\n        //Password is not in sccope - so that this isn't visible in plain text using Angular Batarang or the like\r\n        //So when hitting the login button, get the login password directly from the input element in the DOM\r\n        var formPassword = document.querySelector( '#login-password' );\r\n        $scope.sessServ.login($scope.username, formPassword.value).then(function(sessionData){\r\n          formPassword = {};\r\n          $scope.sessServ.getSelfServiceConfig($scope.username).then(function(){\r\n            $scope.wssConfig = store.get(\"wssConfig\");\r\n            $scope.sessServ.getCustomerDetails($scope.username, $scope.wssConfig.ac_id).then(function(custDetails){\r\n              //Get number of authorisations, stick it in rootScope\r\n              RequestService.getAuthCount().then(function(response) {\r\n                $scope.sessServ.numAuths = response;\r\n                var objNewCustDetails = store.get(\"custDetails\");\r\n                objNewCustDetails.authCount = $scope.sessServ.numAuths;\r\n                store.set(\"custDetails\", objNewCustDetails);\r\n\r\n                //In case the state before was new_password\r\n                var stateBefore = $rootScope.goToPath.substring($rootScope.goToPath.indexOf(\"/\")+1,$rootScope.goToPath.lastIndexOf(\"/\"));\r\n\r\n                if ( stateBefore !==\"new_password\" &&\r\n                     $rootScope.goToPath !== '/' &&\r\n                     $rootScope.goToPath !== '/login' &&\r\n                     $rootScope.goToPath !== '/loginsso' &&\r\n                     $rootScope.goToPath !== '/loginmanual'){\r\n                  var newPath = $rootScope.goToPath;\r\n                  $rootScope.goToPath = '';\r\n                  $location.path(newPath);\r\n                } else {\r\n                  $state.go('home');\r\n                }\r\n              }, function(error){\r\n                $scope.loggingIn = false;\r\n                var toastType = \"error\";\r\n                var toastBody = \"There has been an error in retrieving your authorisations count.\";\r\n                var toastTitle = \"Logon Error!\";\r\n                wssLogging.sendToast(toastType, toastBody, toastTitle);\r\n                if($rootScope.goToPath !== ''){\r\n                  var newPath = $rootScope.goToPath;\r\n                  $rootScope.goToPath = '';\r\n                  $location.path(newPath);\r\n                } else {\r\n                  $state.go('home');\r\n                }\r\n              });\r\n            });\r\n          });\r\n        }, function(error) {\r\n          $scope.loggingIn = false;\r\n          formPassword = {};\r\n        });\r\n      };\r\n\r\n      $scope.requestPassword = function (){\r\n        $scope.sessServ.requestResetCustomerPassword($scope.username).then(function(responseRequest){\r\n          $state.go('login');\r\n        }, function(error){\r\n          $state.go('login');\r\n        });\r\n      };\r\n\r\n      if(!angular.isDefined($scope.sessServ.sspConfig)){\r\n        $state.go('login');\r\n      } else {\r\n        if($scope.sessServ.sspConfig.ssoEnabled === true){\r\n          $state.go('home');\r\n        } else {\r\n          $state.go('loginmanual');\r\n        }\r\n      }\r\n\r\n      //Watch for logout broadcast to clean up session-specific data ready for a new user\r\n      $scope.$on('logout',function(){\r\n      //  SWSessionService = {};\r\n      });\r\n\r\n    }\r\n\r\n})();\r\n"]}