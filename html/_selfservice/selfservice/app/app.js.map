{"version":3,"sources":["../../_itsm_default_v2_template/app/app.js"],"names":["dependencies","module","angular","config","$stateProvider","$urlRouterProvider","paginationTemplateProvider","JSONEditorProvider","state","url","controller","templateUrl","data","loginState","params","token","value","requiresLogin","cache","searchType","searchString","catalog","keywords","title","problem","solution","maxResults","searchResults","boolLoadDefaultSearchSettings","searchCriteria","searchOptions","serviceName","serviceID","abstract","template","otherwise","configure","defaults","options","iconlib","theme","ajax","disable_collapse","run","$rootScope","$state","$cookies","SWSessionService","RequestService","defaultErrorMessageResolver","$location","store","wssLogging","goToPath","path","getSSPSetup","then","sspResponse","go","error","logger","$on","e","toState","toParams","fromState","fromParams","get","preventDefault","normalLogoff","sessionEnded","name","sendToast","getAuthCount","response","numAuths","objNewCustDetails","authCount","set","fromStateName","toStateName","newState","newStateParams","getErrorMessages","errorMessages","updateTextMinimum","updateTextRequired","loginUsernameRequired","fileAttachMaxSize","fileAttachMaxFiles","wizardText","wizardSingleSelect","wizardMultiSelect","wizardFileSelect","wizardDateSelect","wizardDateRangeSelect","$scope"],"mappings":"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","file":"app.js","sourcesContent":["(function() {\r\n\r\n'use strict';\r\n\r\nvar dependencies = [\r\n  'angular-storage',\r\n  'ngSanitize',\r\n  'ui.router',\r\n  'ngCookies',\r\n  'toaster',\r\n  'ngAnimate',\r\n  'angularUtils.directives.dirPagination',\r\n  'ui.bootstrap',\r\n  'ng-backstretch',\r\n  'angular-ladda',\r\n  'jcs-autoValidate',\r\n  'naif.base64',\r\n  'ct.ui.router.extras',\r\n  'angularBootstrapNavTree',\r\n  'daterangepicker',\r\n  'ng-fusioncharts',\r\n  'hierarchical-selector',\r\n  'angular-timeline',\r\n  'angular-json-editor',\r\n  'hbSwXmlmc',\r\n  'mp.deepBlur',\r\n];\r\n\r\nvar module = angular.module('swSelfService', dependencies);\r\n\r\nmodule.config(function ($stateProvider, $urlRouterProvider, paginationTemplateProvider, JSONEditorProvider) {\r\n\r\n  $stateProvider\r\n    .state('login', {\r\n      url: '/login',\r\n      controller: 'LoginController',\r\n      templateUrl: 'templates/login.tpl.html',\r\n      data: {\r\n        loginState: true\r\n      }\r\n    })\r\n    .state('new_password', {\r\n      url: '/new_password/:token',\r\n      controller: 'PasswordController',\r\n      templateUrl: 'templates/resetPassword.tpl.html',\r\n      params: {\r\n              /*selfServiceID: {\r\n                             value: '0',\r\n                             },\r\n              userId: {\r\n                      value: '0',\r\n                      },*/\r\n              token: {\r\n                     value: '0',\r\n                     }\r\n              },\r\n      data: {\r\n        loginState: false\r\n      }\r\n    })\r\n    .state('loginmanual', {\r\n      url: '/loginmanual',\r\n      controller: 'LoginManualController',\r\n      templateUrl: 'templates/login.manual.tpl.html',\r\n      data: {\r\n        loginState: true\r\n      }\r\n    })\r\n    .state('loginsso', {\r\n      url: '/loginsso',\r\n      controller: 'LoginSSOController',\r\n      templateUrl: 'templates/login.sso.tpl.html',\r\n      data: {\r\n        loginState: true\r\n      }\r\n    })\r\n\t\t.state('home', {\r\n  \t\turl: '/',\r\n  \t\tcontroller: 'DashboardController',\r\n  \t\ttemplateUrl: 'templates/dashboard/dashboard.tpl.html',\r\n  \t\tdata: {\r\n  \t\t  requiresLogin: true\r\n  \t\t}\r\n\t  })\r\n\t  .state('profile', {\r\n      cache: false,\r\n  \t\turl: '/profile',\r\n  \t\ttemplateUrl: 'templates/profile/profile.tpl.html',\r\n  \t\tdata: {\r\n  \t\t  requiresLogin: true\r\n  \t\t}\r\n\t  })\r\n\t  .state('knowledge', {\r\n      cache: false,\r\n  \t\turl: '/knowledge',\r\n  \t\ttemplateUrl: 'templates/knowledge/knowledge.tpl.html',\r\n  \t\tparams: {\r\n\t\t\t\t\tsearchType \t\t\t\t\t\t: 1,\r\n\t\t\t\t\tsearchString \t\t\t\t\t: \"\",\r\n\t\t\t\t\tcatalog \t\t\t\t\t\t: {},\r\n\t\t\t\t\tkeywords \t\t\t\t\t\t: true,\r\n\t\t\t\t\ttitle \t\t\t\t\t\t\t: true,\r\n\t\t\t\t\tproblem \t\t\t\t\t\t: true,\r\n\t\t\t\t\tsolution \t\t\t\t\t\t: true,\r\n\t\t\t\t\tmaxResults \t\t\t\t\t\t: 100,\r\n\t\t\t\t\tsearchResults \t\t\t\t\t: [],\r\n\t\t\t\t\tboolLoadDefaultSearchSettings\t: true\r\n\t\t},\r\n\t\tdata: {\r\n  \t\t  requiresLogin: true\r\n  \t\t}\r\n\t  })\r\n\t  .state('kbarticle', {\r\n      cache: false,\r\n      url: '/kbarticle/:kbRef',\r\n      controller: 'KBArticleController',\r\n      templateUrl: 'templates/knowledge/knowledge.article.tpl.html',\r\n      params: {\r\n\t\t  searchCriteria : {},\r\n\t\t  searchOptions : [],\r\n\t\t  searchResults : [],\r\n\t\t  boolLoadDefaultSearchSettings\t: true\r\n\t  },\r\n\t  data: {\r\n        requiresLogin: true\r\n      }\r\n    })\r\n    .state('globalsearch', {\r\n      cache: false,\r\n      url: '/search',\r\n      controller: 'GlobalSearchCtrl',\r\n      templateUrl: 'templates/knowledge/global/global.search.tpl.html',\r\n      data: {\r\n        requiresLogin: true\r\n      }\r\n    })\r\n\t  .state('services', {\r\n      cache: false,\r\n  \t\turl: '/services',\r\n  \t\tcontroller: 'ServiceListCtrl',\r\n  \t\ttemplateUrl: 'templates/services/services.tpl.html',\r\n  \t\tdata: {\r\n  \t\t  requiresLogin: true\r\n  \t\t}\r\n\t  })\r\n    .state('servicedetails', {\r\n      url: '/servicedetails/:serviceName',\r\n      controller: 'ServiceDetailsController',\r\n      templateUrl: 'templates/services/details/service.details.tpl.html',\r\n      params: {\r\n              serviceName: {\r\n                          value: '0',\r\n                         },\r\n              serviceID: {\r\n                    value: '0',\r\n                    }\r\n              },\r\n      data: {\r\n            requiresLogin: true\r\n            }\r\n    })\r\n    .state('requests', {\r\n      abstract: true,\r\n      url: '/requests',\r\n  \t\tcontroller: 'RequestListCtrl',\r\n  \t\ttemplateUrl: 'templates/requests/lists/requests.tpl.html',\r\n  \t\tdata: {\r\n  \t\t  requiresLogin: true\r\n  \t\t}\r\n\t  })\r\n    .state('requests.myrequests', {\r\n      url: '/myrequests',\r\n      controller: 'RequestListCustCtrl',\r\n      template: '<request-list></request-list>'\r\n    })\r\n    .state('requests.teamrequests', {\r\n      url: '/teamrequests',\r\n      controller: 'RequestListTeamCtrl',\r\n      template: '<request-list></request-list>'\r\n    })\r\n    .state('requests.siterequests', {\r\n      url: '/siterequests',\r\n      controller: 'RequestListSiteCtrl',\r\n      template: '<request-list></request-list>'\r\n    })\r\n    .state('requests.orgrequests', {\r\n      url: '/orgrequests',\r\n      controller: 'RequestListOrgCtrl',\r\n      template: '<request-list></request-list>'\r\n    })\r\n    .state('requests.relorgrequests', {\r\n      url: '/relorgrequests',\r\n      controller: 'RequestListRelOrgCtrl',\r\n      template: '<request-list></request-list>'\r\n    })\r\n    .state('requestdetails', {\r\n      cache: false,\r\n      url: '/requestdetails/:requestID',\r\n      controller: 'RequestDetailsController',\r\n      templateUrl: 'templates/requests/details/request.details.tpl.html',\r\n      data: {\r\n        requiresLogin: true\r\n      }\r\n    })\r\n    .state('requestwizard', {\r\n      cache: false,\r\n      url: '/requestwizard/:wizardName',\r\n      controller: 'WizardCtrl',\r\n      templateUrl: 'templates/wizard/raiseRequest.tpl.html',\r\n      data: {\r\n        requiresLogin: true\r\n      }\r\n    })\r\n    .state('requestsauth', {\r\n      abstract: true,\r\n      url: '/requestsauth',\r\n      controller: 'RequestListAuthCtrl',\r\n      templateUrl: 'templates/requests/lists/requests.auth.tpl.html',\r\n      data: {\r\n        requiresLogin: true\r\n      }\r\n    })\r\n    .state('requestsauth.myauths', {\r\n      url: '/myauths',\r\n      controller: 'RequestListMyAuthCtrl',\r\n      template: '<request-list-auth></request-list-auth>'\r\n    })\r\n    .state('requestsauth.managerauths', {\r\n      url: '/managerauths',\r\n      controller: 'RequestListManAuthCtrl',\r\n      template: '<request-list-auth></request-list-auth>'\r\n    });\r\n    $urlRouterProvider.otherwise('/');\r\n\r\n    JSONEditorProvider.configure({\r\n      defaults: {\r\n        options: {\r\n          iconlib: 'fontawesome4',\r\n          theme: 'bootstrap3sm',\r\n          ajax: true,\r\n          disable_collapse: true\r\n        }\r\n      }\r\n    });\r\n});\r\n//Request Service needed to check the counter of the authorisations\r\nmodule.run(function($rootScope, $state, $cookies, SWSessionService, RequestService, defaultErrorMessageResolver, $location, store, wssLogging) {\r\n\r\n\r\n  $rootScope.goToPath = '';\r\n  $rootScope.goToPath = $location.path();\r\n  SWSessionService.getSSPSetup().then(function(sspResponse){\r\n    $state.go('home');\r\n  }, function(error){\r\n    wssLogging.logger(error, 'ERROR', 'app::init', true, true, 'Initialization Error')\r\n  });\r\n\r\n  $rootScope.$on('$stateChangeStart', function(e, toState, toParams, fromState, fromParams) {\r\n    if( $location.path() !== '/login' &&\r\n        $location.path() !== '/loginmanual' &&\r\n        $location.path() !== '/loginsso' &&\r\n        $location.path() !== '/new_password') {\r\n          //Store the location path in rootScope - when hitting a login controller\r\n          //we can then route to this state - accessing Requests and Services directly!\r\n\r\n          $rootScope.goToPath = $location.path();\r\n        }\r\n    if (toState.data && toState.data.requiresLogin) {\r\n      //If the page requires login, and the sessionID is not in the cookies, return to login page\r\n      if (!$cookies.get('swSessionID')) {\r\n        e.preventDefault();\r\n        if(SWSessionService.normalLogoff !== true){\r\n          SWSessionService.sessionEnded = true;\r\n        }\r\n        if (fromState.url !== '^' &&\r\n\t\t\tfromState.name !== '\\login' &&\r\n\t\t\tfromState.name !== '\\loginsso' &&\r\n\t\t\tfromState.name !== '\\loginmanual') {\r\n\t\t\t\twssLogging.sendToast('error', 'Your session appears to have expired. Please log on again.', 'Session Error!');\r\n        }\r\n        $state.go('login');\r\n      }\r\n    } else {\r\n      // If state doesn't require login - it's a login page!\r\n      // If we have a current active session, just go back home\r\n      // To prevent customers attempting to get to one of the login pages when they already have a session\r\n      if($cookies.get('swSessionID') &&\r\n        (toState.data && toState.data.loginState)){\r\n        e.preventDefault();\r\n        $state.go('home');\r\n      }\r\n    }\r\n  });\r\n\r\n  $rootScope.$on('$stateChangeSuccess', function(e, toState, toParams, fromState, fromParams){\r\n\t  \r\n\t//Refresh the counter of the authorisation if the session exits\r\n    //Storaging in the session service and the local storage\r\n    if ($cookies.get('swSessionID')){\r\n      RequestService.getAuthCount().then(function(response){\r\n                  //$scope.sessServ.numAuths = response;\r\n                  SWSessionService.numAuths = response\r\n                  var objNewCustDetails = store.get(\"custDetails\");\r\n                  objNewCustDetails.authCount = response;\r\n                  store.set(\"custDetails\", objNewCustDetails);\r\n                  SWSessionService.numAuths = response;\r\n      });\r\n    }  \r\n\t  \r\n    $rootScope.fromStateName = fromState.name;\r\n    $rootScope.toStateName = toState.name;\r\n    if( fromState.name === '' &&\r\n        toState.name !== 'login' &&\r\n        toState.name !== 'loginmanual' &&\r\n        toState.name !== 'loginsso') {\r\n      //Capture and process page refreshes\r\n      var newState = store.get('newState');\r\n      if(newState === 'requestwizard'){\r\n        // If trying to refresh page on requestwizard, take back to home\r\n        // Do not refresh wizard page as Angular data for current wizard will be lost!\r\n        $state.go('home');\r\n      } else if(newState !== ''){\r\n        //this is a page refresh - go to state immediately prior to refresh\r\n        var newStateParams = store.get('newStateParams');\r\n        $state.go(newState, newStateParams);\r\n      }\r\n    } else if ( toState.name !== 'login' &&\r\n                toState.name !== 'loginmanual' &&\r\n                toState.name !== 'loginsso' ){\r\n      //Set current page state in localStorage when change successful\r\n      //This is so we can keep the current state if the browser is refreshed\r\n      store.set('newState', toState.name);\r\n      store.set('newStateParams', toParams);\r\n    } else if ( toState.name === 'login' ||\r\n                toState.name === 'loginmanual' ||\r\n                toState.name === 'loginsso' ||\r\n                toState.name === 'new_password' ){\r\n\r\n\r\n      //Trying to get to login state - already logged in?\r\n      if($cookies.get('swSessionID')){\r\n        //If already logged in, go home\r\n        e.preventDefault();\r\n        $state.go('home');\r\n      }\r\n\r\n    } else {\r\n      //State Change as normal\r\n    }\r\n  });\r\n\r\n  //Add custom validation messages\r\n  defaultErrorMessageResolver.getErrorMessages().then(function(errorMessages){\r\n    errorMessages.updateTextMinimum = 'Your update is too short!';\r\n    errorMessages.updateTextRequired = 'You need to provide a description when updating requests!';\r\n    errorMessages.loginUsernameRequired = 'You need to enter your username!';\r\n    errorMessages.fileAttachMaxSize = 'Files must not exceed 10 MB!';\r\n    errorMessages.fileAttachMaxFiles = 'You only upload up to 5 files at a time!';\r\n    errorMessages.wizardText = 'This field is required';\r\n    errorMessages.wizardSingleSelect = 'Please select one of the above options';\r\n    errorMessages.wizardMultiSelect = 'Please select one or more of the above options';\r\n    errorMessages.wizardFileSelect = 'Please attach one or more files to this request';\r\n    errorMessages.wizardDateSelect = 'Please select a date, above';\r\n    errorMessages.wizardDateRangeSelect = 'Please select a date range, above';\r\n  });\r\n});\r\n\r\nmodule.controller( 'swSelfServiceCtrl', function ($scope, store) {\r\n\r\n});\r\n\r\n})();\r\n"]}