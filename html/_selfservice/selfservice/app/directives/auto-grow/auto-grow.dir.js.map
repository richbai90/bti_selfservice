{"version":3,"sources":["../../../../_itsm_default_v2_template/app/directives/auto-grow/auto-grow.dir.js"],"names":["angular","module","directive","scope","element","attr","minHeight","offsetHeight","paddingLeft","css","paddingRight","$shadow","position","top","left","width","offsetWidth","parseInt","fontSize","fontFamily","lineHeight","resize","document","body","append","update","times","string","number","i","r","val","replace","space","length","html","Math","max","bind"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,CAAC,YAAY;AACT;;AACAA,UAASC,MAAT,CAAgB,eAAhB,EACSC,SADT,CACmB,UADnB,EAC+B,YAAW;AACxC,WAAO,UAASC,KAAT,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA8B;AACnC,UAAIC,YAAYF,QAAQ,CAAR,EAAWG,YAA3B;AAAA,UACEC,cAAcJ,QAAQK,GAAR,CAAY,aAAZ,CADhB;AAAA,UAEEC,eAAeN,QAAQK,GAAR,CAAY,cAAZ,CAFjB;;AAIA,UAAIE,UAAUX,QAAQI,OAAR,CAAgB,aAAhB,EAA+BK,GAA/B,CAAmC;AAC/CG,kBAAU,UADqC;AAE/CC,aAAK,CAAC,KAFyC;AAG/CC,cAAM,CAAC,KAHwC;AAI/CC,eAAOX,QAAQ,CAAR,EAAWY,WAAX,GAAyBC,SAAST,eAAe,CAAxB,CAAzB,GAAsDS,SAASP,gBAAgB,CAAzB,CAJd;AAK/CQ,kBAAUd,QAAQK,GAAR,CAAY,UAAZ,CALqC;AAM/CU,oBAAYf,QAAQK,GAAR,CAAY,YAAZ,CANmC;AAO/CW,oBAAYhB,QAAQK,GAAR,CAAY,YAAZ,CAPmC;AAQ/CY,gBAAY;AARmC,OAAnC,CAAd;AAUArB,cAAQI,OAAR,CAAgBkB,SAASC,IAAzB,EAA+BC,MAA/B,CAAsCb,OAAtC;;AAEA,UAAIc,SAAS,YAAW;AACtB,YAAIC,QAAQ,UAASC,MAAT,EAAiBC,MAAjB,EAAyB;AACnC,eAAK,IAAIC,IAAI,CAAR,EAAWC,IAAI,EAApB,EAAwBD,IAAID,MAA5B,EAAoCC,GAApC,EAAyC;AACvCC,iBAAKH,MAAL;AACD;AACD,iBAAOG,CAAP;AACD,SALD;;AAOA,YAAIC,MAAM3B,QAAQ2B,GAAR,GAAcC,OAAd,CAAsB,IAAtB,EAA4B,MAA5B,EACPA,OADO,CACC,IADD,EACO,MADP,EAEPA,OAFO,CAEC,IAFD,EAEO,OAFP,EAGPA,OAHO,CAGC,KAHD,EAGQ,aAHR,EAIPA,OAJO,CAIC,KAJD,EAIQ,OAJR,EAKPA,OALO,CAKC,SALD,EAKY,UAASC,KAAT,EAAgB;AAAE,iBAAOP,MAAM,QAAN,EAAgBO,MAAMC,MAAN,GAAe,CAA/B,IAAoC,GAA3C;AAAiD,SAL/E,CAAV;AAMAvB,gBAAQwB,IAAR,CAAaJ,GAAb;;AAEA3B,gBAAQK,GAAR,CAAY,QAAZ,EAAsB2B,KAAKC,GAAL,CAAS1B,QAAQ,CAAR,EAAWJ,YAAX,GAA0B,EAAnC,CAAsC,qBAAtC,EAA6DD,SAA7D,IAA0E,IAAhG;AACD,OAjBD;;AAmBAF,cAAQkC,IAAR,CAAa,+BAAb,EAA8Cb,MAA9C;AACAA;AACD,KAtCD;AAuCD,GAzCD;AA0CH,CA5CD","file":"auto-grow.dir.js","sourcesContent":["/**\r\n * From https://gist.github.com/thomseddon/4703968\r\n *\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2013 Thom Seddon\r\n * Copyright (c) 2010 Google\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n * Adapted from: http://code.google.com/p/gaequery/source/browse/trunk/src/static/scripts/jquery.autogrow-textarea.js\r\n *\r\n * Works nicely with the following styles:\r\n * textarea {\r\n *  resize: none;\r\n *  word-wrap: break-word;\r\n *  transition: 0.05s;\r\n *  -moz-transition: 0.05s;\r\n *  -webkit-transition: 0.05s;\r\n *  -o-transition: 0.05s;\r\n * }\r\n *\r\n * Usage: <textarea auto-grow></textarea>\r\n */\r\n(function () {\r\n    'use strict';\r\n    angular .module('swSelfService')\r\n            .directive('autoGrow', function() {\r\n      return function(scope, element, attr){\r\n        var minHeight = element[0].offsetHeight,\r\n          paddingLeft = element.css('paddingLeft'),\r\n          paddingRight = element.css('paddingRight');\r\n\r\n        var $shadow = angular.element('<div></div>').css({\r\n          position: 'absolute',\r\n          top: -10000,\r\n          left: -10000,\r\n          width: element[0].offsetWidth - parseInt(paddingLeft || 0) - parseInt(paddingRight || 0),\r\n          fontSize: element.css('fontSize'),\r\n          fontFamily: element.css('fontFamily'),\r\n          lineHeight: element.css('lineHeight'),\r\n          resize:     'none'\r\n        });\r\n        angular.element(document.body).append($shadow);\r\n\r\n        var update = function() {\r\n          var times = function(string, number) {\r\n            for (var i = 0, r = ''; i < number; i++) {\r\n              r += string;\r\n            }\r\n            return r;\r\n          };\r\n\r\n          var val = element.val().replace(/</g, '&lt;')\r\n            .replace(/>/g, '&gt;')\r\n            .replace(/&/g, '&amp;')\r\n            .replace(/\\n$/, '<br/>&nbsp;')\r\n            .replace(/\\n/g, '<br/>')\r\n            .replace(/\\s{2,}/g, function(space) { return times('&nbsp;', space.length - 1) + ' '; });\r\n          $shadow.html(val);\r\n\r\n          element.css('height', Math.max($shadow[0].offsetHeight + 10 /* the \"threshold\" */, minHeight) + 'px');\r\n        };\r\n\r\n        element.bind('keyup keydown keypress change', update);\r\n        update();\r\n      };\r\n    });\r\n})();\r\n"]}