{"version":3,"sources":["../../../../_itsm_default_v2_template/app/directives/bti-tree-selector/bti-tree-selector-2.js"],"names":["angular","module","directive","$timeout","restrict","templateUrl","transclude","scope","require","bindToController","data","display","value","className","style","onSelect","controllerAs","controller","options","copy","focused","currentLevel","id","focusedCount","hasChildren","option","Array","isArray","children","length","getOptionByID","arrID","split","find","el","reduce","acc","cv","ci","name","toggleExpand","self","expanding","updateOptions","navigate","crumb","call","model","$setViewValue","undefined","$setValidity","blur","focus","select","e","element","currentTarget","parent","keyPress","console","log","crumbs","preventDefault","which","prevCrumb","expand","preventDeFocus","force","hover","category","hoverOut","bind","link","elem","attr","ctrl","treeSelector"],"mappings":"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","file":"bti-tree-selector-2.js","sourcesContent":["(() => {\r\n  'use strict';\r\n  angular\r\n    .module('swSelfService')\r\n    .directive('btiTreeSelector', ['$timeout',\r\n      ($timeout) => ({\r\n        restrict: 'E',\r\n        templateUrl: 'app/directives/bti-tree-selector/bti-tree-selector.tpl2.html',\r\n        transclude: true,\r\n        scope: true,\r\n        require: 'ngModel',\r\n        bindToController: {\r\n          data: '<',\r\n          display: '@',\r\n          value: '@',\r\n          className: '@class',\r\n          style: '@',\r\n          onSelect: '<',\r\n        },\r\n\r\n        controllerAs: 'treeSelector',\r\n        controller ()  {\r\n          this.options = angular.copy(this.data);\r\n          this.focused = false;\r\n          this.currentLevel = { id: 'top', display: 'Top Level' };\r\n          this.focusedCount = 0;\r\n\r\n          function hasChildren(option) {\r\n            return (!Array.isArray(option) && (option.children && option.children.length));\r\n          }\r\n\r\n          function getOptionByID(id, options) {\r\n            let option;\r\n            if (id === 'top') {\r\n              return options;\r\n            }\r\n            const arrID = id.split(' -> ');\r\n            if (arrID.length === 1) {\r\n              option = options.find(el => el.id === id);\r\n            } else {\r\n              option = arrID.reduce((acc, cv, ci) => (ci ? acc.children.find(el => el.name === cv) : options.find(el => el.name === acc)), arrID[0])\r\n            }\r\n\r\n            return option;\r\n          }\r\n\r\n          const toggleExpand = () => {\r\n\r\n            let self = this;\r\n            this.expanding = false;\r\n            $timeout(() => self.expanding = true, 50);\r\n\r\n          };\r\n\r\n          const updateOptions = (options, data) => {\r\n            const option = typeof options === 'string' ? getOptionByID(options, data) : options;\r\n            const children = hasChildren(option);\r\n            this.options = angular.copy(children ? option.children : option);\r\n          };\r\n\r\n\r\n          const navigate = (crumb) => {\r\n            const option = getOptionByID.call(this, crumb.id, this.data);\r\n            updateOptions.call(this, option, this.data);\r\n            if (crumb.id === 'top') {\r\n              this.model.$setViewValue(this.onSelect(undefined));\r\n              this.model.$setValidity('completeselect', false);\r\n            } else {\r\n              if (!option.children.length) {\r\n                this.model.$setViewValue(this.onSelect([option]));\r\n                this.model.$setValidity('completeselect', true);\r\n                this.blur();\r\n              } else {\r\n                this.model.$setValidity('completeselect', false);\r\n                this.model.$setViewValue(this.onSelect(undefined));\r\n                this.focus();\r\n              }\r\n            }\r\n\r\n            this.currentLevel = angular.copy(crumb);\r\n          };\r\n\r\n          const select = (option, e) => {\r\n            angular.element(e.currentTarget).parent().focus();\r\n            updateOptions(option.children, this.data);\r\n            this.currentLevel = { id: option.id, display: option.name };\r\n            if (!option.children.length) {\r\n              this.model.$setViewValue(this.onSelect([option]));\r\n              this.model.$setValidity('completeselect', true);\r\n              this.blur();\r\n            } else {\r\n              this.model.$setValidity('completeselect', false)\r\n            }\r\n\r\n          };\r\n\r\n          this.keyPress = e => {\r\n            if (this.focused) {\r\n              console.log(this.model.crumbs);\r\n              e.preventDefault();\r\n              if ((e.which === 8 || e.which === 37) && this.model.crumbs.length) {\r\n                let prevCrumb = this.model.crumbs.length - 2;\r\n                if (prevCrumb >= 0) navigate(this.model.crumbs[prevCrumb]);\r\n              }\r\n            }\r\n          };\r\n\r\n          this.expand = () => {\r\n            if (this.focusedCount <= 1) {\r\n              this.focusedCount += 2;\r\n              this.preventDeFocus = true;\r\n            } else {\r\n              this.preventDeFocus = false;\r\n            }\r\n            this.focused ? this.blur(true) : this.focus();\r\n          };\r\n\r\n          this.focus = () => {\r\n            toggleExpand();\r\n            this.focusedCount++;\r\n            this.focused = true\r\n          };\r\n\r\n          this.blur = (force) => {\r\n            if (!this.preventDeFocus && (force || !this.options.length)) {\r\n              this.expanding = false;\r\n              this.focused = false;\r\n              this.focusedCount = 0;\r\n            }\r\n          };\r\n\r\n          this.hover = category => {\r\n            this.category = category;\r\n            this.preventDeFocus = true;\r\n          };\r\n\r\n          this.hoverOut = () => {\r\n            this.category = '';\r\n            this.preventDeFocus = false;\r\n          };\r\n\r\n          this.select = select.bind(this);\r\n          this.navigate = navigate.bind(this);\r\n\r\n        },\r\n        link(scope, elem, attr, ctrl) {\r\n          scope.treeSelector.model = ctrl;\r\n          elem.attr('class', '');\r\n        }\r\n      }),\r\n    ])\r\n})();"]}