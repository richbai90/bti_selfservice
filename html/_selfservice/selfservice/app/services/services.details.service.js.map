{"version":3,"sources":["../../../_itsm_default_v2_template/app/services/services.details.service.js"],"names":["angular","module","service","ServiceDetailsService","$inject","$q","XMLMCService","toaster","wssHelpers","store","$http","self","getXMLMCInformation","my_service","action","arraySolution","XMLCResponde","deferred","defer","sqparams","xmlmc","MethodCall","addParam","invoke","onSuccess","params","rowData","Object","prototype","toString","call","row","intArrayLength","length","i","push","resolve","onFailure","error","reject","promise"],"mappings":"AAAA,CAAC,YAAW;AACR;;AACAA,UACGC,MADH,CACU,eADV,EAEGC,OAFH,CAEW,uBAFX,EAEoCC,qBAFpC;;AAIAA,wBAAsBC,OAAtB,GAA8B,CAAC,IAAD,EAAM,cAAN,EAAqB,SAArB,EAA+B,YAA/B,EAA4C,OAA5C,EAAoD,OAApD,CAA9B;AACA,WAASD,qBAAT,CAA+BE,EAA/B,EAAmCC,YAAnC,EAAiDC,OAAjD,EAA2DC,UAA3D,EAAuEC,KAAvE,EAA8EC,KAA9E,EAAqF;;AAGnF,QAAIC,OAAO;AACT,yBAAmB,EADV;AAET,mBAAa,CAFJ;AAGT,iBAAW,CAHF;AAIT,wBAAkB,EAJT;AAKT,sBAAgB,EALP;AAMT,uBAAiB,EANR;AAOT,4BAAsB,EAPb;AAQT,2BAAqB,EARZ;AAST,8BAAwB,EATf;AAUT,mBAAa;AAVJ,KAAX;;AAcAA,SAAKC,mBAAL,GAA2B,UAASC,UAAT,EAAqBC,MAArB,EAA4B;AACrD,UAAIC,gBAAgB,EAApB;AACA,UAAIC,eAAe,EAAnB;AACA,UAAIC,WAAWZ,GAAGa,KAAH,EAAf;AACA,UAAIC,WAAW,SAAON,UAAP,GAAkB,cAAlB,GAAiCC,MAAhD;AACA,UAAIM,QAAQ,IAAId,aAAae,UAAjB,EAAZ;;AAEAD,YAAME,QAAN,CAAe,aAAf,EAA8B,iDAA9B;AACAF,YAAME,QAAN,CAAe,YAAf,EAA6BH,QAA7B;;AAGAC,YAAMG,MAAN,CAAa,MAAb,EAAqB,mBAArB,EAA0C;AACxCC,mBAAW,UAASC,MAAT,EAAgB;AACvB;AACA,cAAGA,OAAOC,OAAV,EAAmB;AACG,gBAAIC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAAgCL,OAAOC,OAAP,CAAeK,GAA/C,MAAyD,gBAA7D,EAAgF;AAC9E,kBAAIC,iBAAiBP,OAAOC,OAAP,CAAeK,GAAf,CAAmBE,MAAxC;AACA;AACA,mBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,cAApB,EAAoCE,GAApC,EAAyC;AACvCnB,8BAAcoB,IAAd,CAAmBV,OAAOC,OAAP,CAAeK,GAAf,CAAmBG,CAAnB,CAAnB;AACD;AACF,aAND,MAOK;AACAnB,4BAAcoB,IAAd,CAAmBV,OAAOC,OAAP,CAAeK,GAAlC;AACJ;AACDd,qBAASmB,OAAT,CAAiBrB,aAAjB;AACpB,WAZF,MAcM;AACGE,qBAASmB,OAAT,CAAiBrB,aAAjB;AACP;AACL,SApBuC;;AAsBxCsB,mBAAW,UAASC,KAAT,EAAe;AACxB;AACArB,mBAASsB,MAAT,CAAgBD,KAAhB;AACD;AAzBuC,OAA1C;AA2BA,aAAOrB,SAASuB,OAAhB;AACD,KAvCD;;AAyCA,WAAO7B,IAAP;AACD;AAEJ,CApED","file":"services.details.service.js","sourcesContent":["(function (){\r\n    'use strict';\r\n    angular\r\n      .module('swSelfService')\r\n      .service('ServiceDetailsService', ServiceDetailsService);\r\n\r\n    ServiceDetailsService.$inject=['$q','XMLMCService','toaster','wssHelpers','store','$http'];\r\n    function ServiceDetailsService($q, XMLMCService, toaster , wssHelpers, store, $http) {\r\n     \r\n\r\n      var self = {\r\n        'assetSQLColumns': '',\r\n        'serviceId': 0,\r\n        'callref': 0,\r\n        'serviceDetails': [],\r\n        'serviceDiary': [],\r\n        'serviceAssets': [],\r\n        'serviceAttachments': [],\r\n        'serviceComponents': [],\r\n        'serviceAuthorisation': [],\r\n        'callClass': ''\r\n      };\r\n\r\n\r\n      self.getXMLMCInformation = function(my_service, action){\r\n        var arraySolution = [] ; \r\n        var XMLCResponde = {};\r\n        var deferred = $q.defer();\r\n        var sqparams = \"sid=\"+my_service+\"&executable=\"+action;\r\n        var xmlmc = new XMLMCService.MethodCall();\r\n        \r\n        xmlmc.addParam(\"storedQuery\", \"query/wss/services/services.details.information\");\r\n        xmlmc.addParam(\"parameters\", sqparams);\r\n        \r\n\r\n        xmlmc.invoke(\"data\", \"invokeStoredQuery\", {\r\n          onSuccess: function(params){\r\n              //XMLC was succesfull\r\n              if(params.rowData) {\r\n                                    if( Object.prototype.toString.call( params.rowData.row ) === '[object Array]' ) {\r\n                                      var intArrayLength = params.rowData.row.length;\r\n                                      //obj is array\r\n                                      for (var i = 0; i < intArrayLength; i++) {\r\n                                        arraySolution.push(params.rowData.row[i]);\r\n                                      }\r\n                                    } \r\n                                    else {\r\n                                         arraySolution.push(params.rowData.row);\r\n                                    }\r\n                                    deferred.resolve(arraySolution);\r\n               } \r\n               \r\n               else {\r\n                       deferred.resolve(arraySolution);\r\n               }\r\n          },\r\n          \r\n          onFailure: function(error){\r\n            //Send a toaster and change state back to Home?\r\n            deferred.reject(error);\r\n          }\r\n        });\r\n        return deferred.promise;\r\n      };\r\n\r\n      return self;\r\n    }\r\n\r\n})();\r\n"]}