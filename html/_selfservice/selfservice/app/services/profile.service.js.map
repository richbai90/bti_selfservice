{"version":3,"sources":["../../../_itsm_default_v2_template/app/services/profile.service.js"],"names":["angular","module","factory","ProfileService","$inject","$q","XMLMCService","store","wssLogging","self","getProfileDetails","custDetails","get","instanceConfig","deferred","defer","userObj","sqparams","keysearch","xmlmc","MethodCall","addParam","getProfileDetailsSQ","invoke","onSuccess","params","rowData","row","resolve","onFailure","error","logger","promise","updateProfileDetails","user","addData","firstname","surname","email","mobiletel","location","rowsEffected","sendToast","addCustSub","category","id","name","removeCustSub","updateCustSubs","catArray","forEach","getKBSubKey","then","key","subscribed","getCustCIs","ciArray","getCustCIsSQ","Object","prototype","toString","call","intArrayLength","length","i","push","getKBCatalogs","kbCatsArray","getKBCatsSQ","rowArray","getKBSubsCatIDs","kbSubsCatIDArray","getKBSubsSQ","fk_cat_id","catID","pk_auto_id"],"mappings":"AAAA,CAAC,YAAW;AACR;;AACAA,SACGC,MADH,CACU,eADV,EAEGC,OAFH,CAEW,gBAFX,EAE6BC,cAF7B;;AAIEA,gBAAeC,OAAf,GAAuB,CAAC,IAAD,EAAO,cAAP,EAAsB,OAAtB,EAA8B,YAA9B,CAAvB;;AAEF,UAASD,cAAT,CAAwBE,EAAxB,EAA4BC,YAA5B,EAA0CC,KAA1C,EAAiDC,UAAjD,EACH;AACC,MAAIC,OAAO;AACV,2BAAwB,KADd;AAEV,0BAAuB,0CAFb;AAGV,mBAAgB,sCAHN;AAIV,kBAAe,0CAJL;AAKV,kBAAe,0CALL;AAMV,cAAW;AAND,GAAX;;AASAA,OAAKC,iBAAL,GAAyB,YACzB;AACCD,QAAKE,WAAL,GAAiBJ,MAAMK,GAAN,CAAU,aAAV,CAAjB;AACAH,QAAKI,cAAL,GAAoBN,MAAMK,GAAN,CAAU,gBAAV,CAApB;;AAEA,OAAIE,WAAWT,GAAGU,KAAH,EAAf;AACA,OAAIC,UAAU,EAAd;AACA,OAAIC,WAAW,YAAUR,KAAKE,WAAL,CAAiBO,SAA1C;AACA,OAAIC,QAAQ,IAAIb,aAAac,UAAjB,EAAZ;AACAD,SAAME,QAAN,CAAe,aAAf,EAA8BZ,KAAKa,mBAAnC;AACAH,SAAME,QAAN,CAAe,YAAf,EAA6BJ,QAA7B;AACAE,SAAMI,MAAN,CAAa,MAAb,EAAqB,mBAArB,EAA0C;AACzCC,eAAW,UAASC,MAAT,EACX;AACC,SAAGA,OAAOC,OAAV,EACA;AACCV,gBAAUS,OAAOC,OAAP,CAAeC,GAAzB;AACAb,eAASc,OAAT,CAAiBZ,OAAjB;AACA,MAJD,MAMA;AACCF,eAASc,OAAT,CAAiB,EAAjB;AACA;AACD,KAZwC;AAazCC,eAAW,UAASC,KAAT,EACX;AACCtB,gBAAWuB,MAAX,CAAkBD,KAAlB,EAAyB,OAAzB,EAAkC,mCAAlC,EAAuE,KAAvE,EAA8E,KAA9E;AACA;AAhBwC,IAA1C;;AAmBA,UAAOhB,SAASkB,OAAhB;AACA,GA/BD;;AAiCA;AACAvB,OAAKwB,oBAAL,GAA4B,UAASC,IAAT,EAC5B;AACC,OAAIf,QAAQ,IAAIb,aAAac,UAAjB,EAAZ;AACAD,SAAME,QAAN,CAAe,OAAf,EAAwB,QAAxB;AACAF,SAAMgB,OAAN,CAAc,WAAd,EAA2B1B,KAAKE,WAAL,CAAiBO,SAA5C;AACAC,SAAMgB,OAAN,CAAc,WAAd,EAA2BD,KAAKE,SAAhC;AACAjB,SAAMgB,OAAN,CAAc,SAAd,EAAyBD,KAAKG,OAA9B;AACAlB,SAAMgB,OAAN,CAAc,OAAd,EAAuBD,KAAKI,KAA5B;AACAnB,SAAMgB,OAAN,CAAc,WAAd,EAA2BD,KAAKK,SAAhC;AACApB,SAAMgB,OAAN,CAAc,UAAd,EAA0BD,KAAKM,QAA/B;AACArB,SAAMI,MAAN,CAAa,MAAb,EAAqB,cAArB,EAAqC;AACpCC,eAAW,UAASC,MAAT,EACX;AACC,SAAGA,OAAOgB,YAAP,KAAwB,GAA3B,EACA;AACC;AACA,MAHD,MAKA;AACCjC,iBAAWkC,SAAX,CAAqB,SAArB,EAAgC,+BAAhC;AACA;AACD,KAXmC;AAYpCb,eAAW,UAASC,KAAT,EACX;AACCtB,gBAAWuB,MAAX,CAAkBD,KAAlB,EAAyB,OAAzB,EAAkC,sCAAlC,EAA0E,KAA1E,EAAiF,KAAjF;AACA;AAfmC,IAArC;AAiBA,GA3BD;;AA8BA;AACArB,OAAKkC,UAAL,GAAkB,UAASC,QAAT,EAClB;AACC,OAAIzB,QAAQ,IAAIb,aAAac,UAAjB,EAAZ;;AAEAD,SAAME,QAAN,CAAe,OAAf,EAAwB,gBAAxB;;AAEAF,SAAMgB,OAAN,CAAc,cAAd,EAA8B1B,KAAKE,WAAL,CAAiBO,SAA/C;AACAC,SAAMgB,OAAN,CAAc,WAAd,EAA2BS,SAASC,EAApC;AACA1B,SAAMgB,OAAN,CAAc,aAAd,EAA6BS,SAASE,IAAtC;;AAEA3B,SAAMI,MAAN,CAAa,MAAb,EAAqB,WAArB,EACA;AACCC,eAAW,UAASC,MAAT,EACX;AACCjB,gBAAWkC,SAAX,CAAqB,SAArB,EAAgC,oDAAhC;AACA,KAJF;AAKCb,eAAW,UAASC,KAAT,EACX;AACCtB,gBAAWuB,MAAX,CAAkBD,KAAlB,EAAyB,OAAzB,EAAkC,4BAAlC,EAAgE,KAAhE,EAAuE,KAAvE;AACA;AARF,IADA;AAWA,GArBD;;AAuBA;AACArB,OAAKsC,aAAL,GAAqB,UAASF,EAAT,EACrB;AACC,OAAI1B,QAAQ,IAAIb,aAAac,UAAjB,EAAZ;;AAEAD,SAAME,QAAN,CAAe,OAAf,EAAwB,gBAAxB;AACAF,SAAME,QAAN,CAAe,UAAf,EAA2BwB,EAA3B;AACA1B,SAAMI,MAAN,CAAa,MAAb,EAAqB,cAArB,EACA;AACCC,eAAW,UAASC,MAAT,EACX;AACCjB,gBAAWkC,SAAX,CAAqB,SAArB,EAAgC,oDAAhC;AACA,KAJF;AAKCb,eAAW,UAASC,KAAT,EACX;AACCtB,gBAAWuB,MAAX,CAAkBD,KAAlB,EAAyB,OAAzB,EAAkC,+BAAlC,EAAmE,KAAnE,EAA0E,KAA1E;AACA;AARF,IADA;AAWA,GAjBD;;AAoBA;AACArB,OAAKuC,cAAL,GAAsB,UAASC,QAAT,EACtB;AACCjD,WAAQkD,OAAR,CAAgBD,QAAhB,EAA0B,UAASL,QAAT,EAC1B;AACC;AACAnC,SAAK0C,WAAL,CAAiBP,SAASC,EAA1B,EAA8BO,IAA9B,CAAmC,UAASC,GAAT,EACnC;AACC;AACA,SAAGA,OAAO,EAAV,EACA;AACC;AACA,UAAIT,SAASU,UAAb,EACA;AACC;AACA7C,YAAKkC,UAAL,CAAgBC,QAAhB;AACA;AACD,MARD,MAUA;AACC;AACA,UAAI,CAACA,SAASU,UAAd,EACA;AACC;AACA7C,YAAKsC,aAAL,CAAmBM,GAAnB;AACA;AACD;AACD,KArBD;AAsBA,IAzBD;AA0BA,GA5BD;;AA8BA;AACA5C,OAAK8C,UAAL,GAAkB,YAClB;AACC,OAAIzC,WAAWT,GAAGU,KAAH,EAAf;AACA,OAAIyC,UAAU,EAAd;AACA,OAAIvC,WAAW,YAAUR,KAAKE,WAAL,CAAiBO,SAA1C;AACA,OAAIC,QAAQ,IAAIb,aAAac,UAAjB,EAAZ;AACAD,SAAME,QAAN,CAAe,aAAf,EAA8BZ,KAAKgD,YAAnC;AACAtC,SAAME,QAAN,CAAe,YAAf,EAA6BJ,QAA7B;AACAE,SAAMI,MAAN,CAAa,MAAb,EAAqB,mBAArB,EAA0C;AACzCC,eAAW,UAASC,MAAT,EACX;AACC,SAAGA,OAAOC,OAAV,EACA;AACC,UAAIgC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAAgCpC,OAAOC,OAAP,CAAeC,GAA/C,MAAyD,gBAA7D,EACA;AACC,WAAImC,iBAAiBrC,OAAOC,OAAP,CAAeC,GAAf,CAAmBoC,MAAxC;AACA;AACA,YAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,cAApB,EAAoCE,GAApC,EACA;AACCR,gBAAQS,IAAR,CAAaxC,OAAOC,OAAP,CAAeC,GAAf,CAAmBqC,CAAnB,CAAb;AACA;AACD,OARD,MAUA;AACCR,eAAQS,IAAR,CAAaxC,OAAOC,OAAP,CAAeC,GAA5B;AACA;AACDb,eAASc,OAAT,CAAiB4B,OAAjB;AACA,MAhBD,MAkBA;AACC1C,eAASc,OAAT,CAAiB,EAAjB;AACA;AACD,KAxBwC;AAyBzCC,eAAW,UAASC,KAAT,EACX;AACEtB,gBAAWuB,MAAX,CAAkBD,KAAlB,EAAyB,OAAzB,EAAkC,4BAAlC,EAAgE,KAAhE,EAAuE,KAAvE;AACD;AA5BwC,IAA1C;;AA+BA,UAAOhB,SAASkB,OAAhB;AACA,GAxCD;;AA2CA;AACAvB,OAAKyD,aAAL,GAAqB,YACrB;AACC,OAAIpD,WAAWT,GAAGU,KAAH,EAAf;AACA,OAAIoD,cAAc,EAAlB;AACA,OAAIlD,WAAW,YAAUR,KAAKE,WAAL,CAAiBO,SAA1C;AACA,OAAIC,QAAQ,IAAIb,aAAac,UAAjB,EAAZ;AACAD,SAAME,QAAN,CAAe,aAAf,EAA8BZ,KAAK2D,WAAnC;AACAjD,SAAME,QAAN,CAAe,YAAf,EAA6BJ,QAA7B;AACAE,SAAMI,MAAN,CAAa,MAAb,EAAqB,mBAArB,EAA0C;AACzCC,eAAW,UAASC,MAAT,EACX;AACC,SAAGA,OAAOC,OAAV,EACA;AACC,UAAIgC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAAgCpC,OAAOC,OAAP,CAAeC,GAA/C,MAAyD,gBAA7D,EACA;AACC,WAAI0C,WAAW5C,OAAOC,OAAP,CAAeC,GAA9B;AACA,YAAK,IAAIA,MAAM,CAAf,EAAkBA,MAAM0C,SAASN,MAAjC,EAAyCpC,KAAzC,EACA;AACCwC,oBAAYF,IAAZ,CAAiBI,SAAS1C,GAAT,CAAjB;AACA;AACD,OAPD,MASA;AACC,WAAIA,MAAMF,OAAOC,OAAP,CAAeC,GAAzB;AACAwC,mBAAYF,IAAZ,CAAiBtC,GAAjB;AACA;AACDb,eAASc,OAAT,CAAiBuC,WAAjB;AACA,MAhBD,MAkBA;AACCrD,eAASc,OAAT,CAAiB,EAAjB;AACA;AACD,KAxBwC;AAyBzCC,eAAW,UAASC,KAAT,EACX;AACCtB,gBAAWuB,MAAX,CAAkBD,KAAlB,EAAyB,OAAzB,EAAkC,+BAAlC,EAAmE,KAAnE,EAA0E,KAA1E;AACA;AA5BwC,IAA1C;;AA+BA,UAAOhB,SAASkB,OAAhB;AACA,GAxCD;;AA0CA;AACAvB,OAAK6D,eAAL,GAAuB,YACvB;AACC,OAAIxD,WAAWT,GAAGU,KAAH,EAAf;AACA,OAAIwD,mBAAmB,EAAvB;AACA,OAAItD,WAAW,YAAUR,KAAKE,WAAL,CAAiBO,SAA1C;AACA,OAAIC,QAAQ,IAAIb,aAAac,UAAjB,EAAZ;AACAD,SAAME,QAAN,CAAe,aAAf,EAA8BZ,KAAK+D,WAAnC;AACArD,SAAME,QAAN,CAAe,YAAf,EAA6BJ,QAA7B;AACAE,SAAMI,MAAN,CAAa,MAAb,EAAqB,mBAArB,EAA0C;AACzCC,eAAW,UAASC,MAAT,EACX;AACC,SAAGA,OAAOC,OAAV,EACA;AACC,UAAIgC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAAgCpC,OAAOC,OAAP,CAAeC,GAA/C,MAAyD,gBAA7D,EACA;AACC,WAAI0C,WAAW5C,OAAOC,OAAP,CAAeC,GAA9B;AACA,YAAK,IAAIA,MAAM,CAAf,EAAkBA,MAAM0C,SAASN,MAAjC,EAAyCpC,KAAzC,EACA;AACC4C,yBAAiBN,IAAjB,CAAsBI,SAAS1C,GAAT,EAAc8C,SAApC;AACA;AACD,OAPD,MASA;AACC,WAAI9C,MAAMF,OAAOC,OAAP,CAAeC,GAAzB;AACA4C,wBAAiBN,IAAjB,CAAsBtC,IAAI8C,SAA1B;AACA;AACD3D,eAASc,OAAT,CAAiB2C,gBAAjB;AACA,MAhBD,MAkBA;AACCzD,eAASc,OAAT,CAAiB,EAAjB;AACA;AACD,KAxBwC;AAyBzCC,eAAW,UAASC,KAAT,EACX;AACCtB,gBAAWuB,MAAX,CAAkBD,KAAlB,EAAyB,OAAzB,EAAkC,iCAAlC,EAAqE,KAArE,EAA4E,KAA5E;AACA;AA5BwC,IAA1C;;AA+BA,UAAOhB,SAASkB,OAAhB;AACA,GAxCD;;AA0CA;AACAvB,OAAK0C,WAAL,GAAmB,UAASuB,KAAT,EACnB;AACC,OAAI5D,WAAWT,GAAGU,KAAH,EAAf;AACA,OAAIwD,mBAAmB,EAAvB;AACA,OAAItD,WAAW,YAAUR,KAAKE,WAAL,CAAiBO,SAA1C;AACAD,eAAY,YAAUyD,KAAtB;AACA,OAAIvD,QAAQ,IAAIb,aAAac,UAAjB,EAAZ;AACAD,SAAME,QAAN,CAAe,aAAf,EAA8BZ,KAAK+D,WAAnC;AACArD,SAAME,QAAN,CAAe,YAAf,EAA6BJ,QAA7B;AACAE,SAAMI,MAAN,CAAa,MAAb,EAAqB,mBAArB,EAA0C;AACzCC,eAAW,UAASC,MAAT,EACX;AACC,SAAGA,OAAOC,OAAV,EACA;AACC,UAAI2B,MAAM5B,OAAOC,OAAP,CAAeC,GAAf,CAAmBgD,UAA7B;AACA7D,eAASc,OAAT,CAAiByB,GAAjB;AACA,MAJD,MAMA;AACCvC,eAASc,OAAT,CAAiB,EAAjB;AACA;AACD,KAZwC;AAazCC,eAAW,UAASC,KAAT,EACX;AACCtB,gBAAWuB,MAAX,CAAkBD,KAAlB,EAAyB,OAAzB,EAAkC,6BAAlC,EAAiE,KAAjE,EAAwE,KAAxE;AACA;AAhBwC,IAA1C;;AAmBA,UAAOhB,SAASkB,OAAhB;AACA,GA7BD;;AA+BA,SAAOvB,IAAP;AACA;AACD,CAnUD","file":"profile.service.js","sourcesContent":["(function (){\r\n    'use strict';\r\n    angular\r\n      .module('swSelfService')\r\n      .factory('ProfileService', ProfileService);\r\n\r\n      ProfileService.$inject=['$q', 'XMLMCService','store','wssLogging'];\r\n\r\n    function ProfileService($q, XMLMCService, store, wssLogging)\r\n\t{\r\n\t\tvar self = {\r\n\t\t\t'notificationsLoading': false,\r\n\t\t\t'getProfileDetailsSQ': 'query/wss/profile/profile.details.select',\r\n\t\t\t'getCustCIsSQ': 'query/wss/profile/profile.cis.select',\r\n\t\t\t'getKBCatsSQ': 'query/wss/profile/profile.kb.cats.select',\r\n\t\t\t'getKBSubsSQ': 'query/wss/profile/profile.kb.subs.select',\r\n\t\t\t'userObj': []\r\n\t\t};\r\n\t\r\n\t\tself.getProfileDetails = function()\r\n\t\t{\r\n\t\t\tself.custDetails=store.get(\"custDetails\");\r\n\t\t\tself.instanceConfig=store.get(\"instanceConfig\");\r\n\t\t\t\r\n\t\t\tvar deferred = $q.defer();\r\n\t\t\tvar userObj = [];\r\n\t\t\tvar sqparams = \"custid=\"+self.custDetails.keysearch;\r\n\t\t\tvar xmlmc = new XMLMCService.MethodCall();\r\n\t\t\txmlmc.addParam(\"storedQuery\", self.getProfileDetailsSQ);\r\n\t\t\txmlmc.addParam(\"parameters\", sqparams);\r\n\t\t\txmlmc.invoke(\"data\", \"invokeStoredQuery\", {\r\n\t\t\t\tonSuccess: function(params)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(params.rowData)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tuserObj = params.rowData.row;\r\n\t\t\t\t\t\tdeferred.resolve(userObj);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdeferred.resolve('');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonFailure: function(error)\r\n\t\t\t\t{\r\n\t\t\t\t\twssLogging.logger(error, \"ERROR\", \"ProfileService::getProfileDetails\", false, false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn deferred.promise;\r\n\t\t};\r\n\t\t\r\n\t\t//-- Updates customer profile with details from passed in user object \r\n\t\tself.updateProfileDetails = function(user)\r\n\t\t{\r\n\t\t\tvar xmlmc = new XMLMCService.MethodCall();\r\n\t\t\txmlmc.addParam(\"table\", \"userdb\");\r\n\t\t\txmlmc.addData(\"keysearch\", self.custDetails.keysearch);\r\n\t\t\txmlmc.addData(\"firstname\", user.firstname);\r\n\t\t\txmlmc.addData(\"surname\", user.surname);\r\n\t\t\txmlmc.addData(\"email\", user.email);\r\n\t\t\txmlmc.addData(\"mobiletel\", user.mobiletel);\r\n\t\t\txmlmc.addData(\"location\", user.location);\r\n\t\t\txmlmc.invoke(\"data\", \"updateRecord\", {\r\n\t\t\t\tonSuccess: function(params)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(params.rowsEffected === \"0\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//-- Nothing updated, so don't send toast\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twssLogging.sendToast('success', 'Profile updated successfully!');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonFailure: function(error)\r\n\t\t\t\t{\r\n\t\t\t\t\twssLogging.logger(error, \"ERROR\", \"ProfileService::updateProfileDetails\", false, false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t//-- Adds customer knowledgbase subscription for passed in category\r\n\t\tself.addCustSub = function(category)\r\n\t\t{\r\n\t\t\tvar xmlmc = new XMLMCService.MethodCall();\r\n\t\t\t\t\t\r\n\t\t\txmlmc.addParam(\"table\", \"userdb_kbnotif\");\r\n\t\t\r\n\t\t\txmlmc.addData(\"fk_keysearch\", self.custDetails.keysearch);\r\n\t\t\txmlmc.addData(\"fk_cat_id\", category.id);\r\n\t\t\txmlmc.addData(\"fk_cat_name\", category.name);\r\n\t\t\t\r\n\t\t\txmlmc.invoke(\"data\", \"addRecord\",\r\n\t\t\t{\r\n\t\t\t\tonSuccess: function(params)\r\n\t\t\t\t{\r\n\t\t\t\t\twssLogging.sendToast('success', 'Knowledge Base subscriptions updated successfully!');\r\n\t\t\t\t},\r\n\t\t\t\tonFailure: function(error)\r\n\t\t\t\t{\r\n\t\t\t\t\twssLogging.logger(error, \"ERROR\", \"ProfileService::addCustSub\", false, false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\t\t\r\n\t\t//-- Removes customer knowledgbase subscription with the passed in ID\r\n\t\tself.removeCustSub = function(id)\r\n\t\t{\r\n\t\t\tvar xmlmc = new XMLMCService.MethodCall();\r\n\t\t\t\r\n\t\t\txmlmc.addParam(\"table\", \"userdb_kbnotif\");\r\n\t\t\txmlmc.addParam(\"keyValue\", id);\r\n\t\t\txmlmc.invoke(\"data\", \"deleteRecord\",\r\n\t\t\t{\r\n\t\t\t\tonSuccess: function(params)\r\n\t\t\t\t{\r\n\t\t\t\t\twssLogging.sendToast('success', 'Knowledge Base subscriptions updated successfully!');\r\n\t\t\t\t},\r\n\t\t\t\tonFailure: function(error)\r\n\t\t\t\t{\r\n\t\t\t\t\twssLogging.logger(error, \"ERROR\", \"ProfileService::removeCustSub\", false, false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t//-- Updates customer Knowledge base subscriptions\r\n\t\tself.updateCustSubs = function(catArray)\r\n\t\t{\r\n\t\t\tangular.forEach(catArray, function(category)\r\n\t\t\t{\r\n\t\t\t\t//-- For each potential subscription get the subscription ID\r\n\t\t\t\tself.getKBSubKey(category.id).then(function(key)\r\n\t\t\t\t{\r\n\t\t\t\t\t//-- If subscription does not exist...\r\n\t\t\t\t\tif(key == \"\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//-- ...and a subscription is required...\r\n\t\t\t\t\t\tif (category.subscribed)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t//-- ...add subscription\r\n\t\t\t\t\t\t\tself.addCustSub(category);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//-- If subscription exists and subscription not required...\r\n\t\t\t\t\t\tif (!category.subscribed)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t//-- ...delete subscription\r\n\t\t\t\t\t\t\tself.removeCustSub(key);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t};\r\n\t\t\r\n\t\t//-- Returns array of CI's owned by customer\r\n\t\tself.getCustCIs = function()\r\n\t\t{\r\n\t\t\tvar deferred = $q.defer();\r\n\t\t\tvar ciArray = [];\r\n\t\t\tvar sqparams = \"custid=\"+self.custDetails.keysearch;\r\n\t\t\tvar xmlmc = new XMLMCService.MethodCall();\r\n\t\t\txmlmc.addParam(\"storedQuery\", self.getCustCIsSQ);\r\n\t\t\txmlmc.addParam(\"parameters\", sqparams);\r\n\t\t\txmlmc.invoke(\"data\", \"invokeStoredQuery\", {\r\n\t\t\t\tonSuccess: function(params)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(params.rowData)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif( Object.prototype.toString.call( params.rowData.row ) === '[object Array]' )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar intArrayLength = params.rowData.row.length;\r\n\t\t\t\t\t\t\t//obj is array\r\n\t\t\t\t\t\t\tfor (var i = 0; i < intArrayLength; i++)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tciArray.push(params.rowData.row[i]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tciArray.push(params.rowData.row);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdeferred.resolve(ciArray);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdeferred.resolve('');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonFailure: function(error)\r\n\t\t\t\t{\r\n\t\t\t\t\t wssLogging.logger(error, \"ERROR\", \"ProfileService::getCustCIs\", false, false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn deferred.promise;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t//-- Returns an array containing all knowledgbase catalogs (name and ID) \r\n\t\tself.getKBCatalogs = function()\r\n\t\t{\r\n\t\t\tvar deferred = $q.defer();\r\n\t\t\tvar kbCatsArray = [];\r\n\t\t\tvar sqparams = \"custid=\"+self.custDetails.keysearch;\r\n\t\t\tvar xmlmc = new XMLMCService.MethodCall();\r\n\t\t\txmlmc.addParam(\"storedQuery\", self.getKBCatsSQ);\r\n\t\t\txmlmc.addParam(\"parameters\", sqparams);\r\n\t\t\txmlmc.invoke(\"data\", \"invokeStoredQuery\", {\r\n\t\t\t\tonSuccess: function(params)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(params.rowData)\r\n\t\t\t\t\t{\t\t\r\n\t\t\t\t\t\tif( Object.prototype.toString.call( params.rowData.row ) === '[object Array]' )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar rowArray = params.rowData.row;\r\n\t\t\t\t\t\t\tfor (var row = 0; row < rowArray.length; row++)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkbCatsArray.push(rowArray[row])\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar row = params.rowData.row;\r\n\t\t\t\t\t\t\tkbCatsArray.push(row);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdeferred.resolve(kbCatsArray);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdeferred.resolve('');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonFailure: function(error)\r\n\t\t\t\t{\r\n\t\t\t\t\twssLogging.logger(error, \"ERROR\", \"ProfileService::getKBCatalogs\", false, false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn deferred.promise;\r\n\t\t};\r\n\t\t\r\n\t\t//-- Returns an array of catalog IDs customer is subscribed to\r\n\t\tself.getKBSubsCatIDs = function()\r\n\t\t{\r\n\t\t\tvar deferred = $q.defer();\r\n\t\t\tvar kbSubsCatIDArray = [];\r\n\t\t\tvar sqparams = \"custid=\"+self.custDetails.keysearch;\r\n\t\t\tvar xmlmc = new XMLMCService.MethodCall();\r\n\t\t\txmlmc.addParam(\"storedQuery\", self.getKBSubsSQ);\r\n\t\t\txmlmc.addParam(\"parameters\", sqparams);\r\n\t\t\txmlmc.invoke(\"data\", \"invokeStoredQuery\", {\r\n\t\t\t\tonSuccess: function(params)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(params.rowData)\r\n\t\t\t\t\t{\t\t\r\n\t\t\t\t\t\tif( Object.prototype.toString.call( params.rowData.row ) === '[object Array]' )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar rowArray = params.rowData.row;\r\n\t\t\t\t\t\t\tfor (var row = 0; row < rowArray.length; row++)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkbSubsCatIDArray.push(rowArray[row].fk_cat_id);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar row = params.rowData.row;\r\n\t\t\t\t\t\t\tkbSubsCatIDArray.push(row.fk_cat_id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdeferred.resolve(kbSubsCatIDArray);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdeferred.resolve('');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonFailure: function(error)\r\n\t\t\t\t{\r\n\t\t\t\t\twssLogging.logger(error, \"ERROR\", \"ProfileService::getKBSubsCatIDs\", false, false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn deferred.promise;\r\n\t\t};\r\n\t\t\r\n\t\t//-- Returns the primary key of of the customer subscription record for the passed in category ID\r\n\t\tself.getKBSubKey = function(catID)\r\n\t\t{\r\n\t\t\tvar deferred = $q.defer();\r\n\t\t\tvar kbSubsCatIDArray = [];\r\n\t\t\tvar sqparams = \"custid=\"+self.custDetails.keysearch;\r\n\t\t\tsqparams += \"&catid=\"+catID;\r\n\t\t\tvar xmlmc = new XMLMCService.MethodCall();\r\n\t\t\txmlmc.addParam(\"storedQuery\", self.getKBSubsSQ);\r\n\t\t\txmlmc.addParam(\"parameters\", sqparams);\r\n\t\t\txmlmc.invoke(\"data\", \"invokeStoredQuery\", {\r\n\t\t\t\tonSuccess: function(params)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(params.rowData)\r\n\t\t\t\t\t{\t\t\r\n\t\t\t\t\t\tvar key = params.rowData.row.pk_auto_id;\r\n\t\t\t\t\t\tdeferred.resolve(key);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdeferred.resolve('');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonFailure: function(error)\r\n\t\t\t\t{\r\n\t\t\t\t\twssLogging.logger(error, \"ERROR\", \"ProfileService::getKBSubKey\", false, false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn deferred.promise;\r\n\t\t};\r\n\t\t\r\n\t\treturn self;\r\n\t}\r\n})();\r\n"]}