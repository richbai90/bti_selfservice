{"version":3,"sources":["../../../_itsm_default_v2_template/app/services/wizard.logrequest.service.js"],"names":["angular","module","service","WizardLogService","$inject","$q","XMLMCService","store","$filter","WizardLogHelpersService","wssLogging","self","unixToDateFilter","unixToTimeFilter","unixToDateTimeFilter","momentToDateFilter","momentToDateRangeFilter","checkboxFilter","fileFilter","standardComponentFilter","optionalComponentFilter","fileAttachments","wizardSubmit","wizdetails","stages","dataform","source","custDetails","get","sessionConfig","wssConfig","deferred","defer","arrTableFields","arrCIs","arrStandardComponents","arrOptionalComponents","boolUseDefaultCol","forEach","stage","key","questions","question","targetTable","targetColumn","type","pickername","answer","oFile","fileKey","push","oCI","oKey","isDefined","ck_config_item","oAnswer","componentoptions","intKey","isObject","targetcolumn","colArray","split","defaulttable","defaultcolumn","answerValue","getAnswer","flg_prefixq","answervalue","opencall","itsm_slaname","discol","companyname","arrAdditionalCallValues","boolUseAdditional","table","column","objRequestDetails","strCallClass","callClass","strCallStatus","logstatus","strProbCode","strSuppGroup","assignGroup","strOwner","strPriority","sla","strSLAName","intSLAID","strImpact","strUrgency","strSite","site","strCostCenter","costcenter","logcall_source","fk_company_id","fk_dept_code","department","assignAnalsyt","boolWizProbcode","boolWizSuppgroup","boolWizOwner","boolWizPriority","boolWizSLA","boolWizImpact","boolWizUrgency","probcode","itsm_impact_level","itsm_urgency_level","suppgroup","owner","itsm_sladef","pk_auto_id","callclass","itsm_catreq_type","itsm_fk_service","request_qty","request_cost","prices","totalCost","toString","request_price","total","request_sla_cost","serviceLevelCost","request_sla_price","servicelevel","request_comp_cost","totalComponentCost","request_comp_price","totalComponentPrice","itsm_title","vsb_title","bpm_wf_id","bpm_workflow_id","fk_manager","bpm_managerid","itsm_impact","itsm_urgency","cp_sla_first_flg","parseInt","getPriorityFromMatrix","then","priorityResponse","resolve","cp_sla_first","getPriorityFromSLAService","fk_cmdb_id","getPriorityFromSLASubscription","subs_id","sld","sld_name","priority","getDefaultPriorityFromSLA","respPriority","getPriorityMatrix","objMatrix","impact","urgency","error","logger","getPrioritySLA","objSLA","fk_slad_name","fk_slad","reject","promise","logRequest","xmlmc","MethodCall","toLowerCase","addParam","boolHaveUpdateTxt","updatedb","updatetxt","k","objAttachment","hasOwnProperty","fileName","filename","fileData","base64","mimeType","filetype","invoke","onSuccess","params","length","attachCIs","callref","addExtOC","attachComponents","onFailure","q","Object","getOwnPropertyNames","p","indexOf","queryString","z","y","encodeURIComponent","intCallref","objComponents","objComponent","sqparams","keysearch","strCIs","strCIName","intCIKey","oQuestion","useDate","validation_type","moment","format","keycol","populateOCWiz","objWizDetails","objWizStages","strDefaultColumn","i","oStage","useCol","strAnswer","addData","pk_qid","title","fk_wiz"],"mappings":"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","file":"wizard.logrequest.service.js","sourcesContent":["(function (){\r\n  'use strict';\r\n  angular\r\n    .module('swSelfService')\r\n    .service('WizardLogService', WizardLogService);\r\n\r\n  WizardLogService.$inject=['$q', 'XMLMCService','store','$filter','WizardLogHelpersService','wssLogging'];\r\n  function WizardLogService($q, XMLMCService, store, $filter, WizardLogHelpersService, wssLogging) {\r\n\r\n    var self = {\r\n      unixToDateFilter: $filter(\"unixToDate\"),\r\n      unixToTimeFilter: $filter(\"unixToTime\"),\r\n      unixToDateTimeFilter: $filter(\"unixToDateTime\"),\r\n      momentToDateFilter: $filter(\"momentToDate\"),\r\n      momentToDateRangeFilter: $filter(\"momentToDateRange\"),\r\n      checkboxFilter: $filter(\"checkboxDisplay\"),\r\n      fileFilter: $filter(\"fileDisplay\"),\r\n      standardComponentFilter: $filter(\"standardComponentDisplay\"),\r\n      optionalComponentFilter: $filter(\"optionalComponentDisplay\"),\r\n      fileAttachments: []\r\n    };\r\n\r\n    self.wizardSubmit = function(wizdetails, stages, dataform, source) {\r\n      self.custDetails = store.get(\"custDetails\");\r\n      self.sessionConfig = store.get(\"sessionConfig\");\r\n      self.wssConfig = store.get(\"wssConfig\");\r\n      var deferred = $q.defer();\r\n      self.arrTableFields = [];\r\n      self.arrCIs = [];\r\n      self.arrStandardComponents = [];\r\n      self.arrOptionalComponents = [];\r\n\r\n      var boolUseDefaultCol = false;\r\n      //Cycle through the wizard questions, build the API call\r\n      angular.forEach(stages, function(stage, key) {\r\n        angular.forEach(stage.questions, function(question, key){\r\n          var targetTable = '';\r\n          var targetColumn = '';\r\n\r\n          //If the question is a Custom Picker > File Attachment, populate self.fileAttachments with what we need for the log request\r\n          if(question.type === 'Custom Picker' && question.pickername === 'File Attachments'){\r\n            angular.forEach(question.answer, function(oFile, fileKey){\r\n              self.fileAttachments.push(oFile);\r\n            });\r\n          }\r\n\r\n          if(question.type === 'Custom Picker' && question.pickername === 'Configuration Items'){\r\n            angular.forEach(question.answer, function(oCI, oKey){\r\n              if(angular.isDefined(oCI.ck_config_item)){\r\n                self.arrCIs[oKey] = oCI.ck_config_item;\r\n              }\r\n            });\r\n          }\r\n\r\n          if(question.type === 'StandardComponentRadiobox') {\r\n            angular.forEach(question.answer, function(oAnswer){\r\n              self.arrStandardComponents.push(oAnswer.componentoptions);\r\n            });\r\n          }\r\n\r\n          if(question.type === 'OptionalComponentCheckbox') {\r\n            angular.forEach(question.answer, function(oAnswer, intKey){\r\n              if(angular.isObject(oAnswer)){\r\n                self.arrOptionalComponents[intKey] = oAnswer;\r\n              }\r\n            });\r\n          }\r\n\r\n          //If we have a target column against the question, use that\r\n          if(angular.isDefined(question.targetcolumn)) {\r\n            var colArray = question.targetcolumn.split('.');\r\n            targetTable = colArray[0];\r\n            targetColumn = colArray[1];\r\n          } else {\r\n            //If no target column, use the default\r\n            boolUseDefaultCol = true;\r\n            targetTable = wizdetails.defaulttable;\r\n            targetColumn = wizdetails.defaultcolumn;\r\n          }\r\n\r\n          //Add Table array if doesn't already exist\r\n          if(!angular.isDefined(self.arrTableFields[targetTable])){\r\n            self.arrTableFields[targetTable] = [];\r\n          }\r\n          //Add Column array to Table array if doesn't already exist\r\n          if(!angular.isDefined(self.arrTableFields[targetTable][targetColumn])){\r\n            self.arrTableFields[targetTable][targetColumn] = [];\r\n          }\r\n\r\n          //Process Answer Value\r\n          var answerValue = self.getAnswer(question);\r\n          //Add Prefix\r\n          if(question.flg_prefixq === \"1\" && answerValue !== \"\"){\r\n            answerValue = question.question + \": \" + answerValue;\r\n          }\r\n\r\n          //Process update text columns\r\n          if( boolUseDefaultCol &&\r\n              angular.isDefined(self.arrTableFields[targetTable][targetColumn].answervalue) &&\r\n              answerValue !== \"\") {\r\n                self.arrTableFields[targetTable][targetColumn].answervalue = self.arrTableFields[targetTable][targetColumn].answervalue+\"\\n\"+answerValue;\r\n          } else if ( angular.isDefined(self.arrTableFields[targetTable][targetColumn]) &&\r\n                      answerValue !== \"\") {\r\n            self.arrTableFields[targetTable][targetColumn].answervalue = answerValue;\r\n          }\r\n          //Set SLA Name\r\n          if(targetTable === \"opencall\" && targetColumn === \"itsm_sladef\") {\r\n            self.arrTableFields.opencall.itsm_slaname = [];\r\n            self.arrTableFields.opencall.itsm_slaname.answervalue = question.answer.discol;\r\n          }\r\n          if(targetTable === \"opencall\" && targetColumn === \"fk_company_id\") {\r\n            self.arrTableFields.opencall.companyname = [];\r\n            self.arrTableFields.opencall.companyname.answervalue = question.answer.discol;\r\n          }\r\n        });\r\n      });\r\n      self.arrAdditionalCallValues = {};\r\n      self.boolUseAdditional = false;\r\n      for (var table in self.arrTableFields) {\r\n        self.arrAdditionalCallValues[table]={};\r\n        for (var column in self.arrTableFields[table]){\r\n          if( angular.isDefined(self.arrTableFields[table][column].answervalue) &&\r\n              self.arrTableFields[table][column].answervalue !== \"\"){\r\n            self.boolUseAdditional = true;\r\n            self.arrAdditionalCallValues[table][column]=self.arrTableFields[table][column].answervalue;\r\n          }\r\n        }\r\n      }\r\n\r\n      self.objRequestDetails = [];\r\n      //Variables from config\r\n      self.objRequestDetails.strCallClass = self.sessionConfig.callClass;\r\n      self.objRequestDetails.strCallStatus = self.wssConfig.logstatus;\r\n      self.objRequestDetails.strProbCode = \"\";\r\n      self.objRequestDetails.strSuppGroup = self.sessionConfig.assignGroup;\r\n      self.objRequestDetails.strOwner = \"\";\r\n      self.objRequestDetails.strPriority = self.wssConfig.sla;\r\n      self.objRequestDetails.strSLAName = \"\";\r\n      self.objRequestDetails.intSLAID = \"0\";\r\n      self.objRequestDetails.strImpact = \"\";\r\n      self.objRequestDetails.strUrgency = \"\";\r\n      self.objRequestDetails.strSite = \"\";\r\n\r\n      //Set request site\r\n      if( angular.isDefined(self.arrTableFields.opencall) &&\r\n          angular.isDefined(self.arrTableFields.opencall.site) &&\r\n          angular.isDefined(self.arrTableFields.opencall.site.answervalue) &&\r\n          self.arrTableFields.opencall.site.answervalue !== '') {\r\n        self.objRequestDetails.strSite = self.arrTableFields.opencall.site.answervalue;\r\n      } else if ( angular.isDefined(self.custDetails.site) &&\r\n                  self.custDetails.site !== ''){\r\n        self.objRequestDetails.strSite = self.custDetails.site;\r\n      }\r\n\r\n      //Set request Cost Center\r\n      self.objRequestDetails.strCostCenter = \"\";\r\n      if( angular.isDefined(self.arrTableFields.opencall) &&\r\n          angular.isDefined(self.arrTableFields.opencall.costcenter) &&\r\n          angular.isDefined(self.arrTableFields.opencall.costcenter.answervalue) &&\r\n          self.arrTableFields.opencall.costcenter.answervalue !== '') {\r\n        self.objRequestDetails.strCostCenter = self.arrTableFields.opencall.costcenter.answervalue;\r\n      } else if ( angular.isDefined(self.custDetails.costcenter) &&\r\n                  self.custDetails.costcenter !== '') {\r\n        self.objRequestDetails.strCostCenter = self.custDetails.costcenter;\r\n      }\r\n\r\n      //If no additional values set against opencall, create new array to hold SLA etc info\r\n      if(!angular.isDefined(self.arrAdditionalCallValues.opencall)){\r\n        self.arrAdditionalCallValues.opencall = [];\r\n      }\r\n      //Set logcall source\r\n      self.arrAdditionalCallValues.opencall.logcall_source = 'SELFSERVICE';\r\n\r\n      //If company was not set in wizard - get from customer details\r\n      if(!angular.isDefined(self.arrAdditionalCallValues.opencall.fk_company_id)) {\r\n        if(angular.isDefined(self.custDetails.fk_company_id) && self.custDetails.fk_company_id !==''){\r\n          self.arrAdditionalCallValues.opencall.fk_company_id = self.custDetails.fk_company_id;\r\n          self.arrAdditionalCallValues.opencall.companyname = self.custDetails.companyname;\r\n        }\r\n      }\r\n\r\n      //If department was not set in wizard - get from customer details\r\n      if(!angular.isDefined(self.arrAdditionalCallValues.opencall.fk_dept_code)) {\r\n        if(angular.isDefined(self.custDetails.department) && self.custDetails.department !==''){\r\n          self.arrAdditionalCallValues.opencall.fk_dept_code = self.custDetails.department;\r\n        }\r\n      }\r\n      //Set owner to be assigning analyst from session config\r\n      //This may be overwritten by the Dataform setting or Wizard answer later on\r\n      if(angular.isDefined(self.sessionConfig.assignAnalsyt) && self.sessionConfig.assignAnalsyt !== ''){\r\n        self.objRequestDetails.strOwner = self.sessionConfig.assignAnalsyt;\r\n      }\r\n      //Booleans to track when a value is set by a wizard answer\r\n      var boolWizProbcode = false;\r\n      var boolWizSuppgroup = false;\r\n      var boolWizOwner = false;\r\n      var boolWizPriority = false;\r\n      var boolWizSLA = false;\r\n      var boolWizImpact = false;\r\n      var boolWizUrgency = false;\r\n\r\n      //Get core opencall values if defined by Wizard answers\r\n      //Set bools so that we know these values have been set by the wizard, and to not override with dataform values\r\n      if(angular.isDefined(self.arrTableFields.opencall)){\r\n        if(angular.isDefined(self.arrTableFields.opencall.probcode) && self.arrTableFields.opencall.probcode.answervalue !== ''){\r\n          self.objRequestDetails.strProbCode = self.arrTableFields.opencall.probcode.answervalue;\r\n          boolWizProbcode = true;\r\n        }\r\n        if(angular.isDefined(self.arrTableFields.opencall.itsm_impact_level) && self.arrTableFields.opencall.itsm_impact_level.answervalue !== ''){\r\n          self.objRequestDetails.strImpact = self.arrTableFields.opencall.itsm_impact_level.answervalue;\r\n          boolWizImpact = true;\r\n        }\r\n        if(angular.isDefined(self.arrTableFields.opencall.itsm_urgency_level) && self.arrTableFields.opencall.itsm_urgency_level.answervalue !== ''){\r\n          self.objRequestDetails.strUrgency = self.arrTableFields.opencall.itsm_urgency_level.answervalue;\r\n          boolWizUrgency = true;\r\n        }\r\n        if(angular.isDefined(self.arrTableFields.opencall.suppgroup) && self.arrTableFields.opencall.suppgroup.answervalue !== ''){\r\n          self.objRequestDetails.strSuppGroup = self.arrTableFields.opencall.suppgroup;\r\n          boolWizSuppgroup = true;\r\n        }\r\n        if(angular.isDefined(self.arrTableFields.opencall.owner) && self.arrTableFields.opencall.owner.answervalue !== ''){\r\n          self.objRequestDetails.strOwner = self.arrTableFields.opencall.owner.answervalue;\r\n          boolWizOwner = true;\r\n        }\r\n\r\n        if(angular.isDefined(self.arrTableFields.opencall.itsm_sladef) && self.arrTableFields.opencall.itsm_sladef.answervalue !== ''){\r\n          self.objRequestDetails.intSLAID = self.arrTableFields.opencall.itsm_sladef.answervalue;\r\n          self.objRequestDetails.strSLAName = self.arrTableFields.opencall.itsm_slaname.answervalue;\r\n          boolWizSLA = true;\r\n        } else {\r\n          //We have no SLA defined from the Wizard - get the SLA from the Default Priority\r\n        }\r\n      }\r\n\r\n      if(angular.isDefined(dataform.pk_auto_id)){\r\n        //We have a dataform - get your settings from here!\r\n        self.objRequestDetails.strCallClass = dataform.callclass;\r\n\r\n        //Set Service ID against new Service Request\r\n        if(angular.isDefined(dataform.service) && angular.isDefined(dataform.service.pk_auto_id)){\r\n          if(dataform.callclass === 'Service Request'){\r\n            //Set catalogue request type\r\n            self.arrAdditionalCallValues.opencall.itsm_catreq_type = 'REQUEST';\r\n            //If Service Request, add Service & Cost details etc to request\r\n            self.arrAdditionalCallValues.opencall.itsm_fk_service = dataform.service.pk_auto_id;\r\n            self.arrAdditionalCallValues.opencall.request_qty = '1';\r\n            self.arrAdditionalCallValues.opencall.request_cost = dataform.prices.totalCost.toString();\r\n            self.arrAdditionalCallValues.opencall.request_price = dataform.prices.total.toString();\r\n            self.arrAdditionalCallValues.opencall.request_sla_cost = dataform.prices.serviceLevelCost.toString();\r\n            self.arrAdditionalCallValues.opencall.request_sla_price = dataform.prices.servicelevel.toString();\r\n            self.arrAdditionalCallValues.opencall.request_comp_cost = dataform.prices.totalComponentCost.toString();\r\n            self.arrAdditionalCallValues.opencall.request_comp_price = dataform.prices.totalComponentPrice.toString();\r\n          } else {\r\n            //Set catalogue request type\r\n            self.arrAdditionalCallValues.opencall.itsm_catreq_type = 'SUPPORT';\r\n            //If not Service Request, add the service details to the CI array for association later on\r\n            self.arrCIs[dataform.service.pk_auto_id] = dataform.service.ck_config_item;\r\n          }\r\n        }\r\n        //If summary has not been set against request, set it to the Title of the Service\r\n        if(!angular.isDefined(self.arrAdditionalCallValues.opencall.itsm_title) || self.arrAdditionalCallValues.opencall.itsm_title === ''){\r\n          if(angular.isDefined(dataform.service) && angular.isDefined(dataform.service.vsb_title)){\r\n            self.arrAdditionalCallValues.opencall.itsm_title = dataform.service.vsb_title;\r\n          }\r\n        }\r\n        //Set the Workflow details against the request\r\n        if(angular.isDefined(dataform.bpm_wf_id) && dataform.bpm_wf_id !== ''){\r\n          self.arrAdditionalCallValues.opencall.bpm_workflow_id = dataform.bpm_wf_id;\r\n          if(angular.isDefined(self.custDetails.fk_manager) && self.custDetails.fk_manager !== ''){\r\n            self.arrAdditionalCallValues.opencall.bpm_managerid = self.custDetails.fk_manager;\r\n          }\r\n        }\r\n\r\n        //Check if any of these values have been set by a Wizard answer\r\n        //If not, then use the dataform value\r\n        if(boolWizProbcode === false && angular.isDefined(dataform.probcode) && dataform.probcode !== ''){\r\n          self.objRequestDetails.strProbCode = dataform.probcode;\r\n        }\r\n        if(boolWizSuppgroup === false && angular.isDefined(dataform.suppgroup) && dataform.suppgroup !== ''){\r\n          self.objRequestDetails.strSuppGroup = dataform.suppgroup;\r\n        }\r\n        if(boolWizOwner === false && angular.isDefined(dataform.owner) && dataform.owner !== ''){\r\n          self.objRequestDetails.strOwner = dataform.owner;\r\n        }\r\n        //Get Priority from Dataform Impact & Urgency, and Wizard-Specified SLA\r\n        if(boolWizImpact === false && angular.isDefined(dataform.itsm_impact) && dataform.itsm_impact !== ''){\r\n          self.arrAdditionalCallValues.opencall.itsm_impact_level = dataform.itsm_impact;\r\n          self.objRequestDetails.strImpact = dataform.itsm_impact;\r\n        }\r\n        if(boolWizUrgency === false && angular.isDefined(dataform.itsm_urgency) && dataform.itsm_urgency !== ''){\r\n          self.arrAdditionalCallValues.opencall.itsm_urgency_level = dataform.itsm_urgency;\r\n          self.objRequestDetails.strUrgency = dataform.itsm_urgency;\r\n        }\r\n        if(angular.isDefined(dataform.cp_sla_first_flg) && parseInt(dataform.cp_sla_first_flg) > 0){\r\n          //Do Priority Calculation here\r\n          switch(dataform.cp_sla_first_flg){\r\n            case \"1\":\r\n              WizardLogHelpersService.getPriorityFromMatrix(self.objRequestDetails.intSLAID, self.objRequestDetails.strImpact, self.objRequestDetails.strUrgency)\r\n              .then(function(priorityResponse){\r\n                if(priorityResponse !== \"\"){\r\n                  self.objRequestDetails.strPriority = priorityResponse;\r\n                }\r\n                deferred.resolve(priorityResponse);\r\n              });\r\n              break;\r\n            case \"2\":\r\n              //Get Priority from Wizard Impact, Urgency & SLA\r\n              WizardLogHelpersService.getPriorityFromMatrix(self.objRequestDetails.intSLAID, self.objRequestDetails.strImpact, self.objRequestDetails.strUrgency)\r\n              .then(function(priorityResponse){\r\n                if(priorityResponse !== \"\"){\r\n                  self.objRequestDetails.strPriority = priorityResponse;\r\n                }\r\n                deferred.resolve(priorityResponse);\r\n              });\r\n              break;\r\n            case \"3\":\r\n              //Use SLA from heirarchy to calculate Priority\r\n              if(angular.isDefined(dataform.cp_sla_first) && dataform.cp_sla_first !== \"\"){\r\n                switch(dataform.cp_sla_first){\r\n                  case \"Service\":\r\n                    WizardLogHelpersService.getPriorityFromSLAService(self.objRequestDetails.intSLAID, dataform.service.fk_cmdb_id).then(function(priorityResponse){\r\n                      if(priorityResponse !== \"\"){\r\n                        self.objRequestDetails.strPriority = priorityResponse;\r\n                      }\r\n                      deferred.resolve(priorityResponse);\r\n                    });\r\n                    break;\r\n                  case \"Subscription\":\r\n                    WizardLogHelpersService.getPriorityFromSLASubscription(self.objRequestDetails.intSLAID, dataform.service.subs_id).then(function(priorityResponse){\r\n                      if(priorityResponse !== \"\"){\r\n                        self.objRequestDetails.strPriority = priorityResponse;\r\n                      }\r\n                      deferred.resolve(priorityResponse);\r\n                    });\r\n                    break;\r\n                  case \"Subscription then Service\":\r\n                    WizardLogHelpersService.getPriorityFromSLASubscription(self.objRequestDetails.intSLAID, dataform.service.subs_id).then(function(priorityResponse){\r\n                      if(priorityResponse === \"\"){\r\n                        WizardLogHelpersService.getPriorityFromSLAService(self.objRequestDetails.intSLAID, dataform.service.fk_cmdb_id).then(function(priorityResponse){\r\n                          if(priorityResponse !== \"\"){\r\n                            self.objRequestDetails.strPriority = priorityResponse;\r\n                          }\r\n                          deferred.resolve(priorityResponse);\r\n                        });\r\n                      } else {\r\n                        self.objRequestDetails.strPriority = priorityResponse;\r\n                        deferred.resolve(priorityResponse);\r\n                      }\r\n                    });\r\n                    break;\r\n                }\r\n              } else {\r\n                deferred.resolve(priorityResponse);\r\n              }\r\n              break;\r\n          }\r\n        } else {\r\n          //Priority Flags not set in Dataform\r\n          //Return whatever priority has been set previously\r\n          deferred.resolve(self.objRequestDetails.strPriority);\r\n        }\r\n      } else {\r\n        //We don't have a dataform - get your call settings from the config and wizard entries\r\n        if(self.objRequestDetails.strPriority === '[Use Customer SLA]'){\r\n          // If WSS detfault priority is [Use Customer Priority] take priority details from customer details,\r\n          // then work out Impact & Urgency from either Wizard or SLA & Priority\r\n          if(angular.isDefined(self.custDetails.sld) && self.custDetails.sld > 0){\r\n            self.objRequestDetails.strSLAName = self.custDetails.sld_name;\r\n            self.objRequestDetails.intSLAID = self.custDetails.sld;\r\n            self.arrAdditionalCallValues.opencall.itsm_slaname = self.objRequestDetails.strSLAName;\r\n            self.arrAdditionalCallValues.opencall.itsm_sladef = self.objRequestDetails.intSLAID;\r\n          }\r\n          if(angular.isDefined(self.custDetails.priority) && self.custDetails.priority === '[Use SLA Default Priority]') {\r\n            if(self.objRequestDetails.intSLAID !== ''){\r\n              WizardLogHelpersService.getDefaultPriorityFromSLA(self.objRequestDetails.intSLAID).then(function(respPriority){\r\n                self.custDetails.priority = respPriority;\r\n                self.objRequestDetails.strPriority = self.custDetails.priority;\r\n                if(self.objRequestDetails.strImpact === \"\" || self.objRequestDetails.strUrgency === \"\"){\r\n                  //No impact and urgency - try to get from matrix\r\n                  WizardLogHelpersService.getPriorityMatrix(self.objRequestDetails.strPriority, self.objRequestDetails.intSLAID).then(function(objMatrix){\r\n                    if(angular.isDefined(objMatrix.impact) && angular.isDefined(objMatrix.urgency)){\r\n                      //If Impact not set via Wizard, use one from Matrix\r\n                      if(self.objRequestDetails.strImpact === \"\"){\r\n                        self.arrAdditionalCallValues.opencall.itsm_impact_level = objMatrix.impact;\r\n                      }\r\n                      //If Urgency not set via Wizard, use one from Matrix\r\n                      if(self.objRequestDetails.strUrgency === \"\"){\r\n                        self.arrAdditionalCallValues.opencall.itsm_urgency_level = objMatrix.urgency;\r\n                      }\r\n                    }\r\n                    deferred.resolve(self.objRequestDetails);\r\n                  }, function(error){\r\n                    //We have an SLA but no impact matrix;\r\n                    deferred.resolve(self.objRequestDetails);\r\n                  });\r\n                }\r\n              }, function(error){\r\n                wssLogging.logger(error, \"ERROR\", \"WizardLogService::wizardSubmit\", false, false);\r\n              });\r\n            } else {\r\n              self.objRequestDetails.strPriority = self.custDetails.priority;\r\n            }\r\n          } else if (angular.isDefined(self.custDetails.priority)) {\r\n            self.objRequestDetails.strPriority = self.custDetails.priority;\r\n            if(self.objRequestDetails.strImpact === \"\" || self.objRequestDetails.strUrgency === \"\"){\r\n              //No impact and urgency - try to get from matrix\r\n              WizardLogHelpersService.getPriorityMatrix(self.objRequestDetails.strPriority, self.objRequestDetails.intSLAID).then(function(objMatrix){\r\n                if(angular.isDefined(objMatrix.impact) && angular.isDefined(objMatrix.urgency)){\r\n                  //If Impact not set via Wizard, use one from Matrix\r\n                  if(self.objRequestDetails.strImpact === \"\"){\r\n                    self.arrAdditionalCallValues.opencall.itsm_impact_level = objMatrix.impact;\r\n                  }\r\n                  //If Urgency not set via Wizard, use one from Matrix\r\n                  if(self.objRequestDetails.strUrgency === \"\"){\r\n                    self.arrAdditionalCallValues.opencall.itsm_urgency_level = objMatrix.urgency;\r\n                  }\r\n                }\r\n                deferred.resolve(self.objRequestDetails);\r\n              }, function(error){\r\n                //We have an SLA but no impact matrix;\r\n                deferred.resolve(self.objRequestDetails);\r\n              });\r\n            }\r\n          } else {\r\n            deferred.resolve(self.objRequestDetails);\r\n          }\r\n        } else {\r\n          WizardLogHelpersService.getPrioritySLA(self.objRequestDetails.strPriority).then(function(objSLA){\r\n            self.objRequestDetails.strSLAName = objSLA.fk_slad_name;\r\n            self.objRequestDetails.intSLAID = objSLA.fk_slad;\r\n            self.arrAdditionalCallValues.opencall.itsm_sladef = self.objRequestDetails.intSLAID;\r\n            self.arrAdditionalCallValues.opencall.itsm_slaname = self.objRequestDetails.strSLAName;\r\n            //If we have no Impact or Urgency set via the wizards, go get these from the priority matrix\r\n            if(self.objRequestDetails.strImpact === \"\" || self.objRequestDetails.strUrgency === \"\"){\r\n              WizardLogHelpersService.getPriorityMatrix(self.objRequestDetails.strPriority, self.objRequestDetails.intSLAID).then(function(objMatrix){\r\n                if(angular.isDefined(objMatrix.impact) && angular.isDefined(objMatrix.urgency)){\r\n                  //If Impact not set via Wizard, use one from Matrix\r\n                  if(self.objRequestDetails.strImpact === \"\"){\r\n                    self.arrAdditionalCallValues.opencall.itsm_impact_level = objMatrix.impact;\r\n                  }\r\n                  //If Urgency not set via Wizard, use one from Matrix\r\n                  if(self.objRequestDetails.strUrgency === \"\"){\r\n                    self.arrAdditionalCallValues.opencall.itsm_urgency_level = objMatrix.urgency;\r\n                  }\r\n                }\r\n                deferred.resolve(self.objRequestDetails);\r\n              }, function(error){\r\n                //We have an SLA but no impact matrix;\r\n                deferred.resolve(self.objRequestDetails);\r\n              });\r\n            } else {\r\n              //Impact and Urgency\r\n              self.arrAdditionalCallValues.opencall.itsm_impact_level = self.objRequestDetails.strImpact;\r\n              self.arrAdditionalCallValues.opencall.itsm_urgency_level = self.objRequestDetails.strUrgency;\r\n              deferred.resolve(self.objRequestDetails);\r\n            }\r\n          }, function(error){\r\n            wssLogging.logger(error, \"ERROR\", \"WizardLogService::wizardSubmit\", false, false);\r\n            deferred.reject(error);\r\n          });\r\n        }\r\n      }\r\n      return deferred.promise;\r\n    };\r\n\r\n    //Take call details, log request from this\r\n    self.logRequest = function(){\r\n      var deferred = $q.defer();\r\n      var xmlmc = new XMLMCService.MethodCall();\r\n      var strCallClass = self.objRequestDetails.strCallClass;\r\n      if (strCallClass.toLowerCase() == 'service request'){\r\n      } else if(self.objRequestDetails.strCallStatus === \"Incoming\") {\r\n        xmlmc.addParam(\"logIncoming\", \"true\");\r\n        strCallClass = 'Incoming';\r\n      }\r\n      xmlmc.addParam(\"callClass\", self.objRequestDetails.strCallClass);\r\n      if(angular.isDefined(self.objRequestDetails.strPriority) && self.objRequestDetails.strPriority !== \"\") {\r\n        xmlmc.addParam(\"slaName\", self.objRequestDetails.strPriority);\r\n      }\r\n      if(self.objRequestDetails.strCostCenter !== \"\"){\r\n        xmlmc.addParam(\"costCenter\", self.objRequestDetails.strCostCenter);\r\n      }\r\n      if(self.objRequestDetails.strProbCode !== \"\"){\r\n        xmlmc.addParam(\"probCode\", self.objRequestDetails.strProbCode);\r\n      }\r\n      if(self.objRequestDetails.strSite !== \"\"){\r\n        xmlmc.addParam(\"site\", self.objRequestDetails.strSite);\r\n      }\r\n      xmlmc.addParam(\"groupId\", self.objRequestDetails.strSuppGroup);\r\n      if(self.objRequestDetails.strOwner !== \"\") {\r\n        xmlmc.addParam(\"analystId\", self.objRequestDetails.strOwner);\r\n      }\r\n\t  // If no values have been added to updatedb.update text, we need to set a default blank value\r\n\t  var boolHaveUpdateTxt = true;\r\n\t  if (!angular.isDefined(self.arrTableFields.updatedb))\r\n\t\t  boolHaveUpdateTxt = false;\r\n\t  else if (!angular.isDefined(self.arrTableFields.updatedb.updatetxt))\r\n\t\t  boolHaveUpdateTxt = false;\r\n\t  else if (!angular.isDefined(self.arrTableFields.updatedb.updatetxt.answervalue))\r\n\t\t  boolHaveUpdateTxt = false;\r\n\t  \r\n\t  if (boolHaveUpdateTxt)\r\n\t\txmlmc.addParam(\"updateMessage\", self.arrTableFields.updatedb.updatetxt.answervalue);\r\n\t  else\r\n\t\txmlmc.addParam(\"updateMessage\", \"\");\r\n      xmlmc.addParam(\"updateCode\", \"New Support Request\");\r\n      xmlmc.addParam(\"updateSource\", \"Customer Portal\");\r\n\r\n      if(angular.isDefined(self.fileAttachments) && typeof self.fileAttachments==\"object\"){\r\n        for (var k in self.fileAttachments) {\r\n          var objAttachment = {};\r\n            if (self.fileAttachments.hasOwnProperty(k)) {\r\n              objAttachment.fileName = self.fileAttachments[k].filename;\r\n              objAttachment.fileData = self.fileAttachments[k].base64;\r\n              objAttachment.mimeType = self.fileAttachments[k].filetype;\r\n              xmlmc.addParam(\"fileAttachment\", objAttachment);\r\n            }\r\n        }\r\n        self.fileAttachments = [];\r\n      }\r\n      xmlmc.addParam(\"additionalCallValues\", self.arrAdditionalCallValues);\r\n      xmlmc.invoke(\"selfservice\", \"customerLogNewCall\", {\r\n        onSuccess: function(params){\r\n          if(self.arrCIs.length > 0) {\r\n            self.attachCIs(params.callref, strCallClass);\r\n          }\r\n\t\t  self.addExtOC(params.callref);\r\n          if(strCallClass === 'Service Request'){\r\n            //Add request components\r\n            if(self.arrStandardComponents.length > 0){\r\n              self.attachComponents(params.callref, self.arrStandardComponents);\r\n            }\r\n            //Add optional components\r\n            if(self.arrOptionalComponents.length > 0){\r\n              self.attachComponents(params.callref, self.arrOptionalComponents);\r\n            }\r\n          }\r\n          deferred.resolve(params);\r\n        },\r\n        onFailure: function(error){\r\n          wssLogging.logger(error, \"ERROR\", \"WizardLogService::logRequest\", false, false);\r\n          deferred.reject(error);\r\n        }\r\n      });\r\n      return deferred.promise;\r\n    };\r\n\r\n\tself.addExtOC = function(callref){\r\n\t\tvar q = Object.getOwnPropertyNames(self.arrTableFields);\r\n\t\tfor (var p in q){\r\n\t\t\tif (q[p].indexOf(\"extoc_\") === 0){\r\n\t\t\t\tvar queryString = \"callref=\" + callref + \"&table=\" + q[p];\r\n\t\t\t\tvar z = Object.getOwnPropertyNames(self.arrTableFields[q[p]]);\r\n\t\t\t\tfor (var y in z){\r\n\t\t\t\t\tif (z[y] === \"length\"){} else {\r\n\t\t\t\t\t\tif (angular.isDefined(self.arrTableFields[q[p]][z[y]].answervalue)) queryString += \"&_swc_\" + z[y] + \"=\" + encodeURIComponent(self.arrTableFields[q[p]][z[y]].answervalue);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n//\t\t\t\talert(queryString);\r\n\t\t\t\tvar xmlmc = new XMLMCService.MethodCall();\r\n\t\t\t\txmlmc.addParam(\"storedQuery\", \"query/wss/requests/request.extoc.add\");\r\n\t\t\t\txmlmc.addParam(\"parameters\", queryString);\r\n\t\t\t\txmlmc.invoke(\"data\", \"invokeStoredQuery\", {\r\n\t\t\t\t  onSuccess: function(params){\r\n\t\t\t\t\t//Do nothing!\r\n\t\t\t\t  },\r\n\t\t\t\t  onFailure: function(error){\r\n\t\t\t\t\t//Output error to log\r\n\t\t\t\t\twssLogging.logger(error, \"ERROR\", \"WizardLogService::addExtOC\", true, false);\r\n\t\t\t\t  }\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n    self.attachComponents = function(intCallref, objComponents){\r\n      angular.forEach(objComponents, function(objComponent){\r\n        var xmlmc = new XMLMCService.MethodCall();\r\n        var sqparams = \"callref=\"+intCallref;\r\n        sqparams += \"&custid=\"+self.custDetails.keysearch;\r\n        sqparams += \"&compid=\"+objComponent.pk_auto_id;\r\n        xmlmc.addParam(\"storedQuery\", \"query/wss/requests/request.component.add\");\r\n        xmlmc.addParam(\"parameters\", sqparams);\r\n        xmlmc.invoke(\"data\", \"invokeStoredQuery\", {\r\n          onSuccess: function(params){\r\n            //Do nothing!\r\n          },\r\n          onFailure: function(error){\r\n            //Output error to log\r\n            wssLogging.logger(error, \"ERROR\", \"WizardLogService::attachCIs\", true, false);\r\n          }\r\n        });\r\n      });\r\n    };\r\n\r\n    self.attachCIs = function(intCallref, strCallClass) {\r\n      var strCIs = '';\r\n      angular.forEach(self.arrCIs, function(strCIName, intCIKey){\r\n        if(strCIs !== '') {\r\n          strCIs += ', ';\r\n        }\r\n        strCIs += intCIKey;\r\n      });\r\n      var xmlmc = new XMLMCService.MethodCall();\r\n      var sqparams = \"callref=\"+intCallref;\r\n      sqparams += \"&callclass=\"+strCallClass;\r\n      sqparams += \"&ciids=\"+strCIs;\r\n      xmlmc.addParam(\"storedQuery\", \"query/wss/requests/request.ci.attach\");\r\n      xmlmc.addParam(\"parameters\", sqparams);\r\n      xmlmc.invoke(\"data\", \"invokeStoredQuery\", {\r\n        onSuccess: function(params){\r\n          //Do nothing!\r\n        },\r\n        onFailure: function(error){\r\n          //Output error to log\r\n          wssLogging.logger(error, \"ERROR\", \"WizardLogService::attachCIs\", true, false);\r\n        }\r\n      });\r\n    };\r\n\r\n    self.getAnswer = function(oQuestion){\r\n      var answerValue = '';\r\n      if( angular.isDefined(oQuestion.answer) &&\r\n          oQuestion.answer !== ''){\r\n        answerValue = oQuestion.answer;\r\n      } else {\r\n        //Answer not defined, or blank. Send back blank string for ignore\r\n        return '';\r\n      }\r\n\r\n      switch(oQuestion.type){\r\n        case \"Date\":\r\n          //Date is stored in a moment.js object - conversion required\r\n          answerValue = \"\";\r\n          if(angular.isDefined(oQuestion.answer) &&\r\n              oQuestion.answer !== \"\"){\r\n            var useDate = \"\";\r\n            if(oQuestion.validation_type === \"Numeric\"){\r\n              //Grab the EPOCH from the moment object\r\n              useDate = moment(oQuestion.answer).format('X');\r\n            } else {\r\n              //We have a display filter already to convert in to a string\r\n              useDate = self.momentToDateFilter(oQuestion.answer);\r\n            }\r\n            answerValue = useDate;\r\n          }\r\n          break;\r\n        case 'Date Range':\r\n          //For Date Range, we can use one of our pre-defined display filters to build the output\r\n          answerValue = self.momentToDateRangeFilter(oQuestion.answer);\r\n          break;\r\n        case 'Selectbox':\r\n        case 'Radiobox':\r\n        case 'SLARadiobox':\r\n        case 'Custom Picker':\r\n        case 'Option Selector - Single Select':\r\n          answerValue = \"\";\r\n          if(oQuestion.pickername === \"File Attachments\"){\r\n            answerValue = self.fileFilter(oQuestion.answer);\r\n          } else {\r\n            //For Selectbox, Radiobox and Custom Picker we just want the KEYCOL value to be written to the request\r\n            if( angular.isObject(oQuestion.answer) &&\r\n                angular.isDefined(oQuestion.answer.keycol)){\r\n              answerValue = oQuestion.answer.keycol;\r\n            }\r\n          }\r\n          break;\r\n        case \"Checkbox\":\r\n          //For Checkbox, we already have a display filter to grab the selections - use this!\r\n          answerValue = self.checkboxFilter(oQuestion.answer);\r\n          break;\r\n        case \"StandardComponentRadiobox\":\r\n          answerValue = self.standardComponentFilter(oQuestion.answer);\r\n          break;\r\n        case \"OptionalComponentCheckbox\":\r\n          answerValue = self.optionalComponentFilter(oQuestion.answer);\r\n          break;\r\n      }\r\n      return answerValue;\r\n    };\r\n\r\n    //Take call details, populate\r\n    self.populateOCWiz = function(intCallref, objWizDetails, objWizStages){\r\n      var strDefaultColumn = objWizDetails.defaulttable + '.' + objWizDetails.defaultcolumn;\r\n\r\n      var i = 0;\r\n      angular.forEach(objWizStages, function(oStage){\r\n        angular.forEach(oStage.questions, function(oQuestion){\r\n\r\n          var xmlmc = new XMLMCService.MethodCall();\r\n          xmlmc.addParam(\"table\", \"itsm_oc_wiz\");\r\n          var useCol = strDefaultColumn;\r\n          var strAnswer = self.getAnswer(oQuestion);\r\n          if(angular.isDefined(oQuestion.targetcolumn) && oQuestion.targetcolumn !== \"\"){\r\n            useCol = oQuestion.targetcolumn;\r\n          }\r\n          xmlmc.addData(\"binding\", useCol);\r\n          xmlmc.addData(\"fk_qid\", oQuestion.pk_qid);\r\n          xmlmc.addData(\"fk_wiz_stage_title\", oStage.title);\r\n          xmlmc.addData(\"fk_wiz_stage\", oStage.pk_auto_id);\r\n          xmlmc.addData(\"fk_wiz\", oStage.fk_wiz);\r\n          xmlmc.addData(\"question\", oQuestion.question);\r\n          xmlmc.addData(\"question_ans\", strAnswer);\r\n          xmlmc.addData(\"seq\", i);\r\n          xmlmc.addData(\"fk_callref\",intCallref);\r\n\r\n          xmlmc.invoke(\"data\", \"addRecord\", {\r\n            onSuccess: function(params){\r\n              //Do nothing!\r\n            },\r\n            onFailure: function(error){\r\n              //Output error to console\r\n              wssLogging.logger(error, \"ERROR\", \"WizardLogService::populateOCWiz\", true, false);\r\n            }\r\n          });\r\n          i++;\r\n        });\r\n      });\r\n\r\n    };\r\n\r\n    return self;\r\n  }\r\n}());\r\n"]}