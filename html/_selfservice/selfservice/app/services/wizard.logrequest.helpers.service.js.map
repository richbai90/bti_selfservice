{"version":3,"sources":["../../../_itsm_default_v2_template/app/services/wizard.logrequest.helpers.service.js"],"names":["angular","module","service","WizardLogHelpersService","$inject","$q","XMLMCService","wssLogging","self","getPrioritySLA","strPriority","objSLA","deferred","defer","xmlmc","MethodCall","sqparams","addParam","invoke","onSuccess","params","Object","keys","length","error","logger","reject","isDefined","rowData","row","resolve","onFailure","promise","getPriorityMatrix","intSLAID","arrMatrix","impact","urgency","fk_impact","fk_urgency","getPriorityFromMatrix","strImpact","strUrgency","fk_priority","getPriorityFromSLAService","intServID","priority","getPriorityFromSLASubscription","intSubID","getDefaultPriorityFromSLA","then","defaultPriority"],"mappings":"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","file":"wizard.logrequest.helpers.service.js","sourcesContent":["(function (){\r\n  'use strict';\r\n  angular\r\n    .module('swSelfService')\r\n    .service('WizardLogHelpersService', WizardLogHelpersService);\r\n\r\n  WizardLogHelpersService.$inject=['$q', 'XMLMCService','wssLogging'];\r\n  function WizardLogHelpersService($q, XMLMCService, wssLogging) {\r\n\r\n    var self = {};\r\n\r\n    //Take Priority, work out SLA\r\n    self.getPrioritySLA = function(strPriority){\r\n      var objSLA = {};\r\n      var deferred = $q.defer();\r\n      var xmlmc = new  XMLMCService.MethodCall();\r\n      var sqparams = \"priority=\"+strPriority;\r\n      xmlmc.addParam(\"storedQuery\", \"query/wss/sla/sla.get\");\r\n      xmlmc.addParam(\"parameters\", sqparams);\r\n      xmlmc.invoke(\"data\", \"invokeStoredQuery\", {\r\n        onSuccess: function(params){\r\n          if(!Object.keys(params).length) {\r\n            let error = `No priority ${strPriority} exists in sla priority relationship table`;\r\n            wssLogging.logger(error, \"ERROR\", \"WizardLogHelpersService::getPrioritySLA\", true, true, \"SLA Priority Error\");\r\n            deferred.reject(error);\r\n          } else {\r\n            if(angular.isDefined(params.rowData)){\r\n              objSLA = params.rowData.row;\r\n            }\r\n            deferred.resolve(objSLA);\r\n          }\r\n        },\r\n        onFailure: function(error){\r\n          wssLogging.logger(error, \"ERROR\", \"WizardLogHelpersService::getPrioritySLA\", false, false);\r\n          deferred.reject(error);\r\n        }\r\n      });\r\n      return deferred.promise;\r\n    };\r\n\r\n    self.getPriorityMatrix = function(strPriority, intSLAID){\r\n      var deferred = $q.defer();\r\n      var arrMatrix = [];\r\n      arrMatrix.impact = \"\";\r\n      arrMatrix.urgency = \"\";\r\n      if(strPriority !== \"\" && intSLAID !== \"\"){\r\n        var xmlmc = new  XMLMCService.MethodCall();\r\n        var sqparams = \"priority=\"+strPriority;\r\n        sqparams += \"&slaid=\"+intSLAID;\r\n        xmlmc.addParam(\"storedQuery\", \"query/wss/sla/slamatrix.get\");\r\n        xmlmc.addParam(\"parameters\", sqparams);\r\n        xmlmc.invoke(\"data\", \"invokeStoredQuery\", {\r\n          onSuccess: function(params){\r\n            if(angular.isDefined(params.rowData)){\r\n              arrMatrix.impact = params.rowData.row.fk_impact;\r\n              arrMatrix.urgency = params.rowData.row.fk_urgency;\r\n            }\r\n            deferred.resolve(arrMatrix);\r\n          },\r\n          onFailure: function(error){\r\n            wssLogging.logger(error, \"ERROR\", \"WizardLogHelpersService::getPriorityMatrix\", false, false);\r\n            deferred.reject(error);\r\n          }\r\n        });\r\n      } else {\r\n        deferred.resolve(arrMatrix);\r\n      }\r\n      return deferred.promise;\r\n    };\r\n\r\n    //Take SLAID, Impact & Urgency, return Priority\r\n    self.getPriorityFromMatrix = function(intSLAID, strImpact, strUrgency){\r\n      var deferred = $q.defer();\r\n      var strPriority = \"\";\r\n      var xmlmc = new  XMLMCService.MethodCall();\r\n      var sqparams = \"slaid=\"+intSLAID;\r\n      sqparams += \"&impact=\"+strImpact;\r\n      sqparams += \"&urgency=\"+strUrgency;\r\n      xmlmc.addParam(\"storedQuery\", \"query/wss/sla/priority_from_matrix.get\");\r\n      xmlmc.addParam(\"parameters\", sqparams);\r\n      xmlmc.invoke(\"data\", \"invokeStoredQuery\", {\r\n        onSuccess: function(params){\r\n          if(angular.isDefined(params.rowData)){\r\n            strPriority = params.rowData.row.fk_priority;\r\n          }\r\n          deferred.resolve(strPriority);\r\n        },\r\n        onFailure: function(error){\r\n          wssLogging.logger(error, \"ERROR\", \"WizardLogHelpersService::getPriorityFromMatrix\", false, false);\r\n          deferred.reject(strPriority);\r\n        }\r\n      });\r\n      return deferred.promise;\r\n    };\r\n\r\n    //Take SLAID and Service ID, return Priority\r\n    self.getPriorityFromSLAService = function(intSLAID, intServID){\r\n      var deferred = $q.defer();\r\n      var strPriority = \"\";\r\n      var xmlmc = new  XMLMCService.MethodCall();\r\n      var sqparams = \"slaid=\"+intSLAID;\r\n      sqparams += \"&sid=\"+intServID;\r\n      xmlmc.addParam(\"storedQuery\", \"query/wss/sla/priority_from_service_sla.get\");\r\n      xmlmc.addParam(\"parameters\", sqparams);\r\n      xmlmc.invoke(\"data\", \"invokeStoredQuery\", {\r\n        onSuccess: function(params){\r\n          if(angular.isDefined(params.rowData)){\r\n            strPriority = params.rowData.row.priority;\r\n          }\r\n          deferred.resolve(strPriority);\r\n        },\r\n        onFailure: function(error){\r\n          wssLogging.logger(error, \"ERROR\", \"WizardLogHelpersService::getPriorityFromSLAService\", false, false);\r\n          deferred.reject(strPriority);\r\n        }\r\n      });\r\n      return deferred.promise;\r\n    };\r\n\r\n    //Take Subscription ID, return Priority\r\n    self.getPriorityFromSLASubscription = function(intSLAID, intSubID){\r\n      var deferred = $q.defer();\r\n      var strPriority = \"\";\r\n      var xmlmc = new  XMLMCService.MethodCall();\r\n      var sqparams = \"sid=\"+intSubID;\r\n      sqparams += \"&slaid=\"+intSLAID;\r\n      xmlmc.addParam(\"storedQuery\", \"query/wss/sla/priority_from_subs_sla.get\");\r\n      xmlmc.addParam(\"parameters\", sqparams);\r\n      xmlmc.invoke(\"data\", \"invokeStoredQuery\", {\r\n        onSuccess: function(params){\r\n          if(angular.isDefined(params.rowData)){\r\n            if (Object.keys(params.rowData).length === 0)\r\n               strPriority=\"Not configured\";\r\n            else\r\n              strPriority = params.rowData.row.priority;\r\n\r\n            \r\n            if(strPriority === \"[Use SLA Default Priority]\"){\r\n              self.getDefaultPriorityFromSLA(intSLAID).then(function(defaultPriority){\r\n                strPriority = defaultPriority;\r\n                deferred.resolve(defaultPriority);\r\n              }, function(error){\r\n                //No default priority\r\n                deferred.reject(error);\r\n              });\r\n            } else {\r\n              deferred.resolve(strPriority);\r\n            }\r\n          } else {\r\n            deferred.resolve(strPriority);\r\n          }\r\n        },\r\n        onFailure: function(error){\r\n          wssLogging.logger(error, \"ERROR\", \"WizardLogHelpersService::getPriorityFromSLASubscription\", false, false);\r\n          deferred.reject(strPriority);\r\n        }\r\n      });\r\n      return deferred.promise;\r\n    };\r\n\r\n    //Take SLAID and Service ID, return Priority\r\n    self.getDefaultPriorityFromSLA = function(intSLAID){\r\n      var deferred = $q.defer();\r\n      var strPriority = \"\";\r\n      var xmlmc = new  XMLMCService.MethodCall();\r\n      var sqparams = \"slaid=\"+intSLAID;\r\n      xmlmc.addParam(\"storedQuery\", \"query/wss/sla/priority_default_from_sla.get\");\r\n      xmlmc.addParam(\"parameters\", sqparams);\r\n      xmlmc.invoke(\"data\", \"invokeStoredQuery\", {\r\n        onSuccess: function(params){\r\n          if(angular.isDefined(params.rowData)){\r\n            strPriority = params.rowData.row.priority;\r\n          }\r\n          deferred.resolve(strPriority);\r\n        },\r\n        onFailure: function(error){\r\n          wssLogging.logger(error, \"ERROR\", \"WizardLogHelpersService::getDefaultPriorityFromSLA\", false, false);\r\n          deferred.reject(error);\r\n        }\r\n      });\r\n      return deferred.promise;\r\n    };\r\n\r\n    return self;\r\n  }\r\n}());\r\n"]}