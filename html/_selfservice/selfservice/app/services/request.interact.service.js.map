{"version":3,"sources":["../../../_itsm_default_v2_template/app/services/request.interact.service.js"],"names":["angular","module","service","RequestInteractService","$inject","$q","XMLMCService","wssHelpers","store","SWSessionService","wssLogging","self","updateRating","strCallref","arrRating","deferred","defer","custDetails","get","intCallref","callrefValue","isDefined","origRating","newRating","origText","newText","sqparams","keysearch","xmlmc","MethodCall","addParam","invoke","onSuccess","params","resolve","onFailure","error","logger","reject","promise","updateRequest","strUpdate","strUpdateType","objFileAttachments","updateCode","k","objAttachment","hasOwnProperty","fileName","filename","fileData","base64","mimeType","filetype","callActionStatus","success","updateFailMessage","message","indexOf","authoriseRequest","intDecision","fk_manager","objAdditionalValues","opencall","bpm_laction","bpm_lactionbytype","bpm_lactionres","bpm_lactionbyid","bpm_execvpme","numAuths"],"mappings":"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","file":"request.interact.service.js","sourcesContent":["(function (){\r\n    'use strict';\r\n    angular\r\n      .module('swSelfService')\r\n      .service('RequestInteractService', RequestInteractService);\r\n\r\n    RequestInteractService.$inject=['$q','XMLMCService','wssHelpers','store','SWSessionService','wssLogging'];\r\n    function RequestInteractService($q, XMLMCService, wssHelpers, store, SWSessionService, wssLogging) {\r\n\r\n      var self = {};\r\n\r\n      self.updateRating = function(strCallref, arrRating) {\r\n        var deferred = $q.defer();\r\n        self.custDetails = store.get(\"custDetails\");\r\n        var intCallref = wssHelpers.callrefValue(strCallref);\r\n        if(angular.isDefined(arrRating)){\r\n          if(arrRating.origRating != arrRating.newRating || arrRating.origText != arrRating.newText) {\r\n            var sqparams = \"intrating=\"+arrRating.newRating;\r\n            sqparams += \"&strrating=\"+arrRating.newText;\r\n            sqparams += \"&callref=\"+intCallref;\r\n            sqparams += \"&custid=\"+self.custDetails.keysearch;\r\n            var xmlmc = new XMLMCService.MethodCall();\r\n            xmlmc.addParam(\"storedQuery\", \"query/wss/requests/request.update.rating\");\r\n            xmlmc.addParam(\"parameters\", sqparams);\r\n            xmlmc.invoke(\"data\", \"invokeStoredQuery\", {\r\n              onSuccess: function(params){\r\n                deferred.resolve(\"Request Rated Successfully\");\r\n              },\r\n              onFailure: function(error){\r\n                wssLogging.logger(error, \"ERROR\", \"RequestInteractService::updateRating\", false, false);\r\n                deferred.reject(\"Request Rating Failed:\"+error);\r\n              }\r\n            });\r\n          } else {\r\n            deferred.resolve(\"Rating and Comments have not changed!\");\r\n          }\r\n        }\r\n        return deferred.promise;\r\n      };\r\n\r\n      self.updateRequest = function(strCallref, strUpdate, strUpdateType, objFileAttachments) {\r\n        var deferred = $q.defer();\r\n        self.custDetails = store.get(\"custDetails\");\r\n\r\n        var updateCode = \"General Update\";\r\n        switch(strUpdateType) {\r\n          case \"Close\":\r\n          case \"Cancel\":\r\n            updateCode = strUpdateType + \" Call\";\r\n            strUpdate = \"Customer has requested to \"+updateCode+\": \"+ strUpdate;\r\n            break;\r\n        }\r\n\r\n        var intCallref = wssHelpers.callrefValue(strCallref);\r\n        var xmlmc = new XMLMCService.MethodCall();\r\n        xmlmc.addParam(\"callref\", intCallref);\r\n        xmlmc.addParam(\"timeSpent\", \"1\");\r\n        xmlmc.addParam(\"description\", strUpdate);\r\n        xmlmc.addParam(\"updateSource\", \"Customer (\"+self.custDetails.keysearch+\")\");\r\n        xmlmc.addParam(\"updateCode\", updateCode);\r\n\r\n        if(angular.isDefined(objFileAttachments) && typeof objFileAttachments==\"object\"){\r\n          for (var k in objFileAttachments) {\r\n            var objAttachment = {};\r\n              if (objFileAttachments.hasOwnProperty(k)) {\r\n                objAttachment.fileName = objFileAttachments[k].filename;\r\n                objAttachment.fileData = objFileAttachments[k].base64;\r\n                objAttachment.mimeType = objFileAttachments[k].filetype;\r\n                xmlmc.addParam(\"fileAttachment\", objAttachment);\r\n              }\r\n          }\r\n        }\r\n\r\n        xmlmc.invoke(\"selfservice\", \"customerUpdateCall\", {\r\n          onSuccess: function(params){\r\n            if(params.callActionStatus.success == \"false\"){\r\n              var updateFailMessage = params.callActionStatus.message;\r\n              if(updateFailMessage.indexOf(\"Callref\") === 0) {\r\n                 updateFailMessage = \"Unable to update this request as is in a status that cannot be updated.\";\r\n              }\r\n              deferred.reject(updateFailMessage);\r\n            } else {\r\n              deferred.resolve(\"Request Updated Successfully\");\r\n            }\r\n          },\r\n          onFailure: function(error){\r\n            wssLogging.logger(error, \"ERROR\", \"RequestInteractService::updateRequest\", false, false);\r\n            deferred.reject(error);\r\n          }\r\n        });\r\n        return deferred.promise;\r\n      };\r\n\r\n      self.authoriseRequest = function(strCallref, strUpdate, intDecision) {\r\n        var deferred = $q.defer();\r\n        self.custDetails = store.get(\"custDetails\");\r\n        var updateCode = \"\";\r\n        intDecision++;\r\n        switch(intDecision) {\r\n          case 1 :\r\n          //Authorised\r\n            updateCode = \"Request Authorised\";\r\n            break;\r\n          case 2:\r\n          //Rejected\r\n            updateCode = \"Request Rejected\";\r\n            break;\r\n          case 3:\r\n          //Pass to manager\r\n            updateCode = \"Passed To Manager (\"+self.custDetails.fk_manager+\")\";\r\n            break;\r\n        }\r\n        //Perform call diary update first\r\n        var intCallref = wssHelpers.callrefValue(strCallref);\r\n        var xmlmc = new XMLMCService.MethodCall();\r\n        xmlmc.addParam(\"callref\", intCallref);\r\n        xmlmc.addParam(\"timeSpent\", \"1\");\r\n        xmlmc.addParam(\"description\", strUpdate);\r\n        xmlmc.addParam(\"updateSource\", \"Customer (\"+self.custDetails.keysearch+\")\");\r\n        xmlmc.addParam(\"updateCode\", updateCode);\r\n        xmlmc.invoke(\"selfservice\", \"customerUpdateCall\", {\r\n          onSuccess: function(params){\r\n            if(params.callActionStatus.success == \"false\"){\r\n              var updateFailMessage = params.callActionStatus.message;\r\n              if(updateFailMessage.indexOf(\"Callref\") === 0) {\r\n                 updateFailMessage = \"Error updating request \"+strCallref+\": This request is in a status that cannot be updated.\";\r\n              }\r\n              deferred.reject(updateFailMessage);\r\n            } else {\r\n              //Call Diary Update was a success.\r\n              //Now perform customerUpdateCallValues to move BPM on\r\n              xmlmc.addParam(\"callref\", intCallref);\r\n              xmlmc.addParam(\"actionVerb\", \"BPM\");\r\n              var objAdditionalValues = {};\r\n              objAdditionalValues.opencall = {};\r\n              objAdditionalValues.opencall.bpm_laction = \"AUTHORISATION\";\r\n              objAdditionalValues.opencall.bpm_lactionbytype = \"CUSTOMER\";\r\n              objAdditionalValues.opencall.bpm_lactionres = intDecision;\r\n              objAdditionalValues.opencall.bpm_lactionbyid = self.custDetails.keysearch;\r\n              objAdditionalValues.opencall.bpm_execvpme = \"1\";\r\n              xmlmc.addParam(\"additionalCallValues\", objAdditionalValues);\r\n              xmlmc.invoke(\"selfservice\", \"customerUpdateCallValues\", {\r\n                onSuccess: function(params){\r\n                  SWSessionService.numAuths--;\r\n                  deferred.resolve(\"Authorisation Decision Applied Successfully\");\r\n                },\r\n                onFailure: function(error){\r\n                  wssLogging.logger(error, \"ERROR\", \"RequestInteractService::authoriseRequest\", false, false);\r\n                  deferred.reject(error);\r\n                }\r\n              });\r\n            }\r\n          },\r\n          onFailure: function(error){\r\n            deferred.reject(error);\r\n          }\r\n        });\r\n        return deferred.promise;\r\n      };\r\n      return self;\r\n    }\r\n\r\n})();\r\n"]}