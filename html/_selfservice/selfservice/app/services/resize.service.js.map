{"version":3,"sources":["../../../_itsm_default_v2_template/app/services/resize.service.js"],"names":["angular","module","factory","window","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","fn","setTimeout","forEachElement","elements","callback","elementsType","Object","prototype","toString","call","isCollectionTyped","jQuery","Elements","i","j","length","ResizeSensor","element","console","log","EventQueue","q","add","ev","push","remove","newQueue","getComputedStyle","prop","currentStyle","getPropertyValue","style","attachResizeEvent","resized","resizedAttached","resizeSensor","document","createElement","className","styleChild","cssText","innerHTML","appendChild","position","expand","childNodes","expandChild","shrink","dirty","rafId","newWidth","newHeight","lastWidth","offsetWidth","lastHeight","offsetHeight","reset","width","height","scrollLeft","scrollTop","onResized","onScroll","addEvent","el","name","cb","attachEvent","addEventListener","elem","detach","contains","removeChild"],"mappings":"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","file":"resize.service.js","sourcesContent":["/*\n * Reisize service ported over from css-element-queries library\n * To be dependency injected into an angular directive\n */\n\n(() => {\n  'use strict';\n  angular\n    .module('swSelfService')\n    .factory('Resize', [(() => {\n\n      /**\n       * Copyright Marc J. Schmidt. See the LICENSE file at the top-level at\n       * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n       */\n\n      //Make sure it does not throw in a SSR (Server Side Rendering) situation\n      if (typeof window === \"undefined\") {\n        return null;\n      }\n      // Only used for the dirty checking, so the event callback count is limted to max 1 call per fps per sensor.\n      // In combination with the event based resize sensor this saves cpu time, because the sensor is too fast and\n      // would generate too many unnecessary events.\n      var requestAnimationFrame = window.requestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        function (fn) {\n          return window.setTimeout(fn, 20);\n        };\n\n      /**\n       * Iterate over each of the provided element(s).\n       *\n       * @param {HTMLElement|HTMLElement[]} elements\n       * @param {Function}                  callback\n       */\n      function forEachElement(elements, callback) {\n        var elementsType = Object.prototype.toString.call(elements);\n        var isCollectionTyped = ('[object Array]' === elementsType\n          || ('[object NodeList]' === elementsType)\n          || ('[object HTMLCollection]' === elementsType)\n          || ('[object Object]' === elementsType)\n          || ('undefined' !== typeof jQuery && elements instanceof jQuery) //jquery\n          || ('undefined' !== typeof Elements && elements instanceof Elements) //mootools\n        );\n        var i = 0, j = elements.length;\n        if (isCollectionTyped) {\n          for (; i < j; i++) {\n            callback(elements[i]);\n          }\n        } else {\n          callback(elements);\n        }\n      }\n\n      /**\n       * Class for dimension change detection.\n       *\n       * @param {Element|Element[]|Elements|jQuery} element\n       * @param {Function} callback\n       *\n       * @constructor\n       */\n      var ResizeSensor = function (element, callback) {\n        /**\n         *\n         * @constructor\n         */\n        console.log(element);\n        function EventQueue() {\n          var q = [];\n          this.add = function (ev) {\n            q.push(ev);\n          };\n\n          var i, j;\n          this.call = function () {\n            for (i = 0, j = q.length; i < j; i++) {\n              q[i].call();\n            }\n          };\n\n          this.remove = function (ev) {\n            var newQueue = [];\n            for (i = 0, j = q.length; i < j; i++) {\n              if (q[i] !== ev) newQueue.push(q[i]);\n            }\n            q = newQueue;\n          }\n\n          this.length = function () {\n            return q.length;\n          }\n        }\n\n        /**\n         * @param {HTMLElement} element\n         * @param {String}      prop\n         * @returns {String|Number}\n         */\n        function getComputedStyle(element, prop) {\n          if (element.currentStyle) {\n            return element.currentStyle[prop];\n          } else if (window.getComputedStyle) {\n            return window.getComputedStyle(element, null).getPropertyValue(prop);\n          } else {\n            return element.style[prop];\n          }\n        }\n\n        /**\n         *\n         * @param {HTMLElement} element\n         * @param {Function}    resized\n         */\n        function attachResizeEvent(element, resized) {\n          if (!element.resizedAttached) {\n            element.resizedAttached = new EventQueue();\n            element.resizedAttached.add(resized);\n          } else if (element.resizedAttached) {\n            element.resizedAttached.add(resized);\n            return;\n          }\n\n          element.resizeSensor = document.createElement('div');\n          element.resizeSensor.className = 'resize-sensor';\n          var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;';\n          var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';\n\n          element.resizeSensor.style.cssText = style;\n          element.resizeSensor.innerHTML =\n            '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' +\n            '<div style=\"' + styleChild + '\"></div>' +\n            '</div>' +\n            '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' +\n            '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' +\n            '</div>';\n          element.appendChild(element.resizeSensor);\n\n          if (getComputedStyle(element, 'position') == 'static') {\n            element.style.position = 'relative';\n          }\n\n          var expand = element.resizeSensor.childNodes[0];\n          var expandChild = expand.childNodes[0];\n          var shrink = element.resizeSensor.childNodes[1];\n          var dirty, rafId, newWidth, newHeight;\n          var lastWidth = element.offsetWidth;\n          var lastHeight = element.offsetHeight;\n\n          var reset = function () {\n            expandChild.style.width = '100000px';\n            expandChild.style.height = '100000px';\n\n            expand.scrollLeft = 100000;\n            expand.scrollTop = 100000;\n\n            shrink.scrollLeft = 100000;\n            shrink.scrollTop = 100000;\n          };\n\n          reset();\n\n          var onResized = function () {\n            rafId = 0;\n\n            if (!dirty) return;\n\n            lastWidth = newWidth;\n            lastHeight = newHeight;\n\n            if (element.resizedAttached) {\n              element.resizedAttached.call();\n            }\n          };\n\n          var onScroll = function () {\n            newWidth = element.offsetWidth;\n            newHeight = element.offsetHeight;\n            dirty = newWidth != lastWidth || newHeight != lastHeight;\n\n            if (dirty && !rafId) {\n              rafId = requestAnimationFrame(onResized);\n            }\n\n            reset();\n          };\n\n          var addEvent = function (el, name, cb) {\n            if (el.attachEvent) {\n              el.attachEvent('on' + name, cb);\n            } else {\n              el.addEventListener(name, cb);\n            }\n          };\n\n          addEvent(expand, 'scroll', onScroll);\n          addEvent(shrink, 'scroll', onScroll);\n        }\n\n        forEachElement(element, function (elem) {\n          attachResizeEvent(elem, callback);\n        });\n\n        this.detach = function (ev) {\n          ResizeSensor.detach(element, ev);\n        };\n      };\n\n      ResizeSensor.detach = function (element, ev) {\n        forEachElement(element, function (elem) {\n          if (elem.resizedAttached && typeof ev == \"function\") {\n            elem.resizedAttached.remove(ev);\n            if (elem.resizedAttached.length()) return;\n          }\n          if (elem.resizeSensor) {\n            if (elem.contains(elem.resizeSensor)) {\n              elem.removeChild(elem.resizeSensor);\n            }\n            delete elem.resizeSensor;\n            delete elem.resizedAttached;\n          }\n        });\n      };\n\n      return ResizeSensor;\n    })])\n})();"]}