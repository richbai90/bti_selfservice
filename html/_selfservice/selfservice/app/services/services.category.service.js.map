{"version":3,"sources":["../../../_itsm_default_v2_template/app/services/services.category.service.js"],"names":["angular","module","factory","ServiceCategoryService","$inject","$q","XMLMCService","store","wssHelpers","wssLogging","self","unFlattenTree","treeData","unflatten","catList","getTreeData","deferred","defer","getCategorySubscriptions","then","response","categories","forEach","value","currTreeKey","arrCatType","catalog_type","split","strCurrentCat","parentId","catType","catKey","currCat","label","parentlabel","content","icon","www_image_path","replace","data","swValue","description","notes","push","unflattenTreeview","resolve","error","logger","reject","promise","custDetails","get","totalCategories","catSubscriptions","sqparams","keysearch","xmlmc","MethodCall","addParam","catSubSQ","invoke","onSuccess","params","rowData","Object","prototype","toString","call","row","intArrayLength","length","i","onFailure","getCategoryDetails","categoryId","catDetSQ"],"mappings":"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","file":"services.category.service.js","sourcesContent":["(function (){\r\n    'use strict';\r\n    angular\r\n      .module('swSelfService')\r\n      .factory('ServiceCategoryService', ServiceCategoryService);\r\n\r\n      ServiceCategoryService.$inject=['$q', 'XMLMCService', 'store','wssHelpers','wssLogging'];\r\n\r\n    function ServiceCategoryService($q, XMLMCService, store, wssHelpers, wssLogging) {\r\n\r\n      var self = {\r\n        'categoriesLoading': false,\r\n        'catSubSQ': 'query/wss/services/services.category.subscriptions',\r\n        'catDetSQ': 'query/wss/services/services.category.details',\r\n        'treeData': [],\r\n        'catList': []\r\n      };\r\n\r\n      self.unFlattenTree = function(){\r\n        self.treeData = wssHelpers.unflatten(self.catList);\r\n        return self.treeData;\r\n      };\r\n\r\n      self.getTreeData = function() {\r\n        //Get category subscriptions\r\n        var deferred = $q.defer();\r\n        self.getCategorySubscriptions().then(function(response){\r\n          self.categories = response;\r\n          //Instantiate array to hold list of categories, and their relationship to one another\r\n          self.catList = [];\r\n          //Cycle through each of the objects in the response, building the catalog tree data\r\n          angular.forEach(response, function(value, currTreeKey){\r\n            //Split catType in to array\r\n            var arrCatType = value.catalog_type.split('->');\r\n            var strCurrentCat = \"\";\r\n            self.parentId = \"\";\r\n            angular.forEach(arrCatType, function(catType, catKey){\r\n              var currCat = {};\r\n              if(catKey !== 0){\r\n                strCurrentCat += \"->\";\r\n              }\r\n              strCurrentCat += catType;\r\n              currCat.label = catType;\r\n              currCat.parentlabel = self.parentId;\r\n              currCat.content = strCurrentCat;\r\n              currCat.icon = value.www_image_path.replace('&[app.webroot]', '/sw');\r\n              currCat.data = {};\r\n              currCat.data.swValue = strCurrentCat;\r\n              currCat.description = value.notes;\r\n              self.catList.push(currCat);\r\n              self.parentId = catType;\r\n            });\r\n          });\r\n          self.treeData = wssHelpers.unflattenTreeview(self.catList, 'label');\r\n          deferred.resolve(self.treeData);\r\n        }, function(error){\r\n          wssLogging.logger(error, \"ERROR\", \"ServiceCategoryService::getTreeData\", false, false);\r\n          deferred.reject(error);\r\n        });\r\n        return deferred.promise;\r\n      };\r\n\r\n      self.getCategorySubscriptions = function() {\r\n        var deferred = $q.defer();\r\n        self.custDetails = store.get(\"custDetails\");\r\n        var totalCategories = 0;\r\n        var catSubscriptions = [];\r\n        var sqparams = \"custid=\"+self.custDetails.keysearch;\r\n        var xmlmc = new XMLMCService.MethodCall();\r\n        xmlmc.addParam(\"storedQuery\", self.catSubSQ);\r\n        xmlmc.addParam(\"parameters\", sqparams);\r\n        xmlmc.invoke(\"data\", \"invokeStoredQuery\", {\r\n          onSuccess: function(params){\r\n            if(params.rowData) {\r\n              if( Object.prototype.toString.call( params.rowData.row ) === '[object Array]' ) {\r\n                var intArrayLength = params.rowData.row.length;\r\n                //obj is array\r\n                for (var i = 0; i < intArrayLength; i++) {\r\n                  catSubscriptions.push(params.rowData.row[i]);\r\n                }\r\n              } else {\r\n                catSubscriptions.push(params.rowData.row);\r\n              }\r\n              deferred.resolve(catSubscriptions);\r\n            } else {\r\n              deferred.resolve('No Categories Returned.');\r\n            }\r\n          },\r\n          onFailure: function(error){\r\n            wssLogging.logger(error, \"ERROR\", \"ServiceCategoryService::getCategorySubscriptions\", false, false);\r\n            deferred.reject(error);\r\n          }\r\n        });\r\n        return deferred.promise;\r\n      };\r\n\r\n      self.getCategoryDetails = function(categoryId) {\r\n        var deferred = $q.defer();\r\n        var sqparams = \"catid=\"+categoryId;\r\n        var xmlmc = new XMLMCService.MethodCall();\r\n        xmlmc.addParam(\"storedQuery\", self.catDetSQ);\r\n        xmlmc.addParam(\"parameters\", sqparams);\r\n        xmlmc.invoke(\"data\", \"invokeStoredQuery\", {\r\n          onSuccess: function(params){\r\n            if(params.rowData) {\r\n              deferred.resolve(params.rowData.row);\r\n            } else {\r\n              deferred.resolve('No Category Details Returned.');\r\n            }\r\n          },\r\n          onFailure: function(error){\r\n            wssLogging.logger(error, \"ERROR\", \"ServiceCategoryService::getCategoryDetails\", false, false);\r\n            deferred.reject(error);\r\n          }\r\n        });\r\n        return deferred.promise;\r\n      };\r\n\r\n      return self;\r\n    }\r\n})();\r\n"]}