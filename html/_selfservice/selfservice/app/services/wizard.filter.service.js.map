{"version":3,"sources":["../../../_itsm_default_v2_template/app/services/wizard.filter.service.js"],"names":["angular","module","service","WizardFilterService","$inject","$parse","store","self","questionFilters","custDetails","get","orgDetails","processFilter","strFilter","boolPFS","strReturn","objReg","match","forEach","rexVal","newString","replace","prepareForSQL","strVal","isDefined"],"mappings":"AAAC,aAAW;AACV;;AACAA,UACGC,MADH,CACU,eADV,EAEGC,OAFH,CAEW,qBAFX,EAEkCC,mBAFlC;;AAIAA,sBAAoBC,OAApB,GAA4B,CAAC,QAAD,EAAU,OAAV,CAA5B;AACA,WAASD,mBAAT,CAA6BE,MAA7B,EAAqCC,KAArC,EAA4C;;AAE1C;AACAC,SAAKC,eAAL,GAAuB;AACrBC,mBAAaH,MAAMI,GAAN,CAAU,aAAV,CADQ;AAErBC,kBAAYL,MAAMI,GAAN,CAAU,YAAV;AAFS,KAAvB;;AAKA;AACA;AACAH,SAAKK,aAAL,GAAqB,UAASC,SAAT,EAAoBC,OAApB,EAA4B;AAC/C,UAAIC,YAAYF,SAAhB;AACA;AACA,UAAIG,SAASH,UAAUI,KAAV,CAAgB,cAAhB,CAAb;AACAjB,cAAQkB,OAAR,CAAgBF,MAAhB,EAAwB,UAASG,MAAT,EAAgB;AACtC,YAAIC,YAAYD,OAAOE,OAAP,CAAe,IAAf,EAAoB,EAApB,CAAhB;AACAD,oBAAYA,UAAUC,OAAV,CAAkB,IAAlB,EAAuB,EAAvB,CAAZ;AACAD,oBAAYf,OAAOe,SAAP,EAAkBb,KAAKC,eAAvB,CAAZ;AACA,YAAGM,OAAH,EAAW;AACTM,sBAAYb,KAAKe,aAAL,CAAmBF,SAAnB,CAAZ;AACD;AACDL,oBAAYA,UAAUM,OAAV,CAAkBF,MAAlB,EAA0BC,SAA1B,CAAZ;AACD,OARD;AASA,aAAOL,SAAP;AACD,KAdD;;AAgBAR,SAAKe,aAAL,GAAqB,UAASC,MAAT,EAAiB;AACpC,UAAGvB,QAAQwB,SAAR,CAAkBD,MAAlB,CAAH,EAA6B;AAC3B,eAAOA,OAAOF,OAAP,CAAe,GAAf,EAAoB,IAApB,CAAP;AACD,OAFD,MAEO;AACL,eAAO,EAAP;AACD;AACF,KAND;;AAQA,WAAOd,IAAP;AACD;AACF,CA3CA,GAAD","file":"wizard.filter.service.js","sourcesContent":["(function (){\r\n  'use strict';\r\n  angular\r\n    .module('swSelfService')\r\n    .service('WizardFilterService', WizardFilterService);\r\n\r\n  WizardFilterService.$inject=['$parse','store'];\r\n  function WizardFilterService($parse, store) {\r\n\r\n    //Create objects that customer admins can refer to from within the Wizard Question editor\r\n    self.questionFilters = {\r\n      custDetails: store.get(\"custDetails\"),\r\n      orgDetails: store.get(\"orgDetails\")\r\n    };\r\n\r\n    //Takes filter or default value from wizard question, replaces stuff between ![ and ]!\r\n    // with evaluated content from self.questionFilters within this service\r\n    self.processFilter = function(strFilter, boolPFS){\r\n      var strReturn = strFilter;\r\n      //Create array containing all strings from filter that are wrapped in ![]!\r\n      var objReg = strFilter.match(/!\\[(.*?)\\]!/g);\r\n      angular.forEach(objReg, function(rexVal){\r\n        var newString = rexVal.replace(\"![\",\"\");\r\n        newString = newString.replace(\"]!\",\"\");\r\n        newString = $parse(newString)(self.questionFilters);\r\n        if(boolPFS){\r\n          newString = self.prepareForSQL(newString);\r\n        }\r\n        strReturn = strReturn.replace(rexVal, newString);\r\n      });\r\n      return strReturn;\r\n    };\r\n\r\n    self.prepareForSQL = function(strVal) {\r\n      if(angular.isDefined(strVal)){\r\n        return strVal.replace(\"'\", \"''\");\r\n      } else {\r\n        return \"\";\r\n      }\r\n    };\r\n\r\n    return self;\r\n  }\r\n}());\r\n"]}