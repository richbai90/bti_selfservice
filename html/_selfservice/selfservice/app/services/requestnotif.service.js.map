{"version":3,"sources":["../../../_itsm_default_v2_template/app/services/requestnotif.service.js"],"names":["angular","module","factory","RequestNotifService","$inject","$q","XMLMCService","store","wssLogging","self","getActiveNotifications","custDetails","get","instanceConfig","notificationsLoading","deferred","defer","currPageNum","pageNo","notifArray","sqparams","selfServiceInstance","keysearch","category","currCountSQ","notifDetailsSQ","xmlmc","MethodCall","addParam","invoke","onSuccess","params","rowData","Object","prototype","toString","call","row","intArrayLength","length","i","push","resolve","onFailure","error","logger","promise"],"mappings":"AAAA,CAAC,YAAW;AACR;;AACAA,SACGC,MADH,CACU,eADV,EAEGC,OAFH,CAEW,qBAFX,EAEkCC,mBAFlC;;AAIEA,qBAAoBC,OAApB,GAA4B,CAAC,IAAD,EAAO,cAAP,EAAsB,OAAtB,EAA8B,YAA9B,CAA5B;;AAEF,UAASD,mBAAT,CAA6BE,EAA7B,EAAiCC,YAAjC,EAA+CC,KAA/C,EAAsDC,UAAtD,EACH;AACC,MAAIC,OAAO;AACV,2BAAwB,KADd;AAEV,qBAAkB,kDAFR;AAGV,iBAAc,EAHJ;AAIV,iBAAc;AAJJ,GAAX;;AAQAA,OAAKC,sBAAL,GAA8B,YAC9B;AACID,QAAKE,WAAL,GAAiBJ,MAAMK,GAAN,CAAU,aAAV,CAAjB;AACAH,QAAKI,cAAL,GAAoBN,MAAMK,GAAN,CAAU,gBAAV,CAApB;AACHH,QAAKK,oBAAL,GAA4B,IAA5B;AACA,OAAIC,WAAWV,GAAGW,KAAH,EAAf;AACA;AACA,OAAIC,cAAcR,KAAKS,MAAvB;AACA,OAAIC,aAAa,EAAjB;AACA,OAAIC,WAAW,UAAQX,KAAKI,cAAL,CAAoBQ,mBAA3C;AACAD,eAAY,aAAWX,KAAKE,WAAL,CAAiBW,SAAxC;AACAF,eAAY,UAAQX,KAAKc,QAAzB;;AAEAd,QAAKe,WAAL,GAAmBf,KAAKgB,cAAxB;AACA;;AAEA,OAAIC,QAAQ,IAAIpB,aAAaqB,UAAjB,EAAZ;AACAD,SAAME,QAAN,CAAe,aAAf,EAA8BnB,KAAKe,WAAnC;AACAE,SAAME,QAAN,CAAe,YAAf,EAA6BR,QAA7B;AACAM,SAAMG,MAAN,CAAa,MAAb,EAAqB,mBAArB,EAA0C;AAC1CC,eAAW,UAASC,MAAT,EACX;AACE,SAAGA,OAAOC,OAAV,EACA;AACD,UAAIC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAAgCL,OAAOC,OAAP,CAAeK,GAA/C,MAAyD,gBAA7D,EACA;AACE,WAAIC,iBAAiBP,OAAOC,OAAP,CAAeK,GAAf,CAAmBE,MAAxC;AACA;AACA,YAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,cAApB,EAAoCE,GAApC,EACA;AACDrB,mBAAWsB,IAAX,CAAgBV,OAAOC,OAAP,CAAeK,GAAf,CAAmBG,CAAnB,CAAhB;AACE;AACF,OARD,MAUA;AACErB,kBAAWsB,IAAX,CAAgBV,OAAOC,OAAP,CAAeK,GAA/B;AACD;AACD5B,WAAKK,oBAAL,GAA4B,KAA5B;AACAC,eAAS2B,OAAT,CAAiBvB,UAAjB;AACE,MAjBD,MAmBA;AACDV,WAAKK,oBAAL,GAA4B,KAA5B;AACAC,eAAS2B,OAAT,CAAiB,EAAjB;AACE;AACF,KA1ByC;AA2B1CC,eAAW,UAASC,KAAT,EACX;AACCpC,gBAAWqC,MAAX,CAAkBD,KAAlB,EAAyB,OAAzB,EAAkC,6CAAlC,EAAiF,KAAjF,EAAwF,KAAxF;AACA;AA9ByC,IAA1C;;AAiCA,UAAO7B,SAAS+B,OAAhB;AACA,GArDD;AAsDA,SAAOrC,IAAP;AACA;AACD,CA1ED","file":"requestnotif.service.js","sourcesContent":["(function (){\r\n    'use strict';\r\n    angular\r\n      .module('swSelfService')\r\n      .factory('RequestNotifService', RequestNotifService);\r\n\r\n      RequestNotifService.$inject=['$q', 'XMLMCService','store','wssLogging'];\r\n\r\n    function RequestNotifService($q, XMLMCService, store, wssLogging)\r\n\t{\r\n\t\tvar self = {\r\n\t\t\t'notificationsLoading': false,\r\n\t\t\t'notifDetailsSQ': 'query/wss/notifications/requestnotif.list.select',\r\n\t\t\t'notifArray': [],\r\n\t\t\t'totalNotif': 0\r\n\t\t};\r\n\r\n\r\n\t\tself.getActiveNotifications = function()\r\n\t\t{\r\n      self.custDetails=store.get(\"custDetails\");\r\n      self.instanceConfig=store.get(\"instanceConfig\");\r\n\t\t\tself.notificationsLoading = true;\r\n\t\t\tvar deferred = $q.defer();\r\n\t\t\t//Work out columns.\r\n\t\t\tvar currPageNum = self.pageNo;\r\n\t\t\tvar notifArray = [];\r\n\t\t\tvar sqparams = \"ssid=\"+self.instanceConfig.selfServiceInstance;\r\n\t\t\tsqparams += \"&custid=\"+self.custDetails.keysearch;\r\n\t\t\tsqparams += \"&cat=\"+self.category;\r\n\r\n\t\t\tself.currCountSQ = self.notifDetailsSQ;\r\n\t\t\t//--if (self.totalNotif > 0) {\r\n\r\n\t\t\tvar xmlmc = new XMLMCService.MethodCall();\r\n\t\t\txmlmc.addParam(\"storedQuery\", self.currCountSQ);\r\n\t\t\txmlmc.addParam(\"parameters\", sqparams);\r\n\t\t\txmlmc.invoke(\"data\", \"invokeStoredQuery\", {\r\n\t\t\tonSuccess: function(params)\r\n\t\t\t{\r\n\t\t\t  if(params.rowData)\r\n\t\t\t  {\r\n\t\t\t\tif( Object.prototype.toString.call( params.rowData.row ) === '[object Array]' )\r\n\t\t\t\t{\r\n\t\t\t\t  var intArrayLength = params.rowData.row.length;\r\n\t\t\t\t  //obj is array\r\n\t\t\t\t  for (var i = 0; i < intArrayLength; i++)\r\n\t\t\t\t  {\r\n\t\t\t\t\tnotifArray.push(params.rowData.row[i]);\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t  notifArray.push(params.rowData.row);\r\n\t\t\t\t}\r\n\t\t\t\tself.notificationsLoading = false;\r\n\t\t\t\tdeferred.resolve(notifArray);\r\n\t\t\t  }\r\n\t\t\t  else\r\n\t\t\t  {\r\n\t\t\t\tself.notificationsLoading = false;\r\n\t\t\t\tdeferred.resolve('');\r\n\t\t\t  }\r\n\t\t\t},\r\n\t\t\tonFailure: function(error)\r\n\t\t\t{\r\n\t\t\t\twssLogging.logger(error, \"ERROR\", \"RequestNotifService::getActiveNotifications\", false, false);\r\n\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn deferred.promise;\r\n\t\t};\r\n\t\treturn self;\r\n\t}\r\n})();\r\n"]}