{"version":3,"sources":["../../../../_itsm_default_v2_template/app/directives/bti-tree-selector/bti-tree-selector-2.js"],"names":["angular","module","directive","$timeout","restrict","templateUrl","transclude","scope","require","bindToController","data","display","value","className","style","onSelect","controllerAs","controller","options","copy","focused","currentLevel","id","focusedCount","hasChildren","option","Array","isArray","children","length","getOptionByID","arrID","split","find","el","reduce","acc","cv","ci","name","toggleExpand","self","expanding","updateOptions","navigate","crumb","call","model","$setViewValue","undefined","$setValidity","blur","focus","select","e","element","currentTarget","parent","keyPress","preventDefault","which","crumbs","prevCrumb","expand","preventDeFocus","force","hover","category","hoverOut","bind","link","elem","attr","ctrl","treeSelector"],"mappings":"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","file":"bti-tree-selector-2.js","sourcesContent":["(() => {\r\n  'use strict';\r\n  angular\r\n    .module('swSelfService')\r\n    .directive('btiTreeSelector', ['$timeout',\r\n      ($timeout) => ({\r\n        restrict: 'E',\r\n        templateUrl: 'app/directives/bti-tree-selector/bti-tree-selector.tpl2.html',\r\n        transclude: true,\r\n        scope: true,\r\n        require: 'ngModel',\r\n        bindToController: {\r\n          data: '<',\r\n          display: '@',\r\n          value: '@',\r\n          className: '@class',\r\n          style: '@',\r\n          onSelect: '<',\r\n        },\r\n\r\n        controllerAs: 'treeSelector',\r\n        controller ()  {\r\n          this.options = angular.copy(this.data);\r\n          this.focused = false;\r\n          this.currentLevel = { id: 'top', display: 'Top Level' };\r\n          this.focusedCount = 0;\r\n\r\n          function hasChildren(option) {\r\n            return (!Array.isArray(option) && (option.children && option.children.length));\r\n          }\r\n\r\n          function getOptionByID(id, options) {\r\n            let option;\r\n            if (id === 'top') {\r\n              return options;\r\n            }\r\n            const arrID = id.split(' -> ');\r\n            if (arrID.length === 1) {\r\n              option = options.find(el => el.id === id);\r\n            } else {\r\n              option = arrID.reduce((acc, cv, ci) => (ci ? acc.children.find(el => el.name === cv) : options.find(el => el.name === acc)), arrID[0])\r\n            }\r\n\r\n            return option;\r\n          }\r\n\r\n          const toggleExpand = () => {\r\n\r\n            let self = this;\r\n            this.expanding = false;\r\n            $timeout(() => self.expanding = true, 50);\r\n\r\n          };\r\n\r\n          const updateOptions = (options, data) => {\r\n            const option = typeof options === 'string' ? getOptionByID(options, data) : options;\r\n            const children = hasChildren(option);\r\n            this.options = angular.copy(children ? option.children : option);\r\n          };\r\n\r\n\r\n          const navigate = (crumb) => {\r\n            const option = getOptionByID.call(this, crumb.id, this.data);\r\n            updateOptions.call(this, option, this.data);\r\n            if (crumb.id === 'top') {\r\n              this.model.$setViewValue(this.onSelect(undefined));\r\n              this.model.$setValidity('completeselect', false);\r\n            } else {\r\n              if (!option.children.length) {\r\n                this.model.$setViewValue(this.onSelect([option]));\r\n                this.model.$setValidity('completeselect', true);\r\n                this.blur();\r\n              } else {\r\n                this.model.$setValidity('completeselect', false);\r\n                this.model.$setViewValue(this.onSelect(undefined));\r\n                this.focus();\r\n              }\r\n            }\r\n\r\n            this.currentLevel = angular.copy(crumb);\r\n          };\r\n\r\n          const select = (option, e) => {\r\n            angular.element(e.currentTarget).parent().focus();\r\n            updateOptions(option.children, this.data);\r\n            this.currentLevel = { id: option.id, display: option.name };\r\n            if (!option.children.length) {\r\n              this.model.$setViewValue(this.onSelect([option]));\r\n              this.model.$setValidity('completeselect', true);\r\n              this.blur();\r\n            } else {\r\n              this.model.$setValidity('completeselect', false)\r\n            }\r\n\r\n          };\r\n\r\n          this.keyPress = e => {\r\n            if (this.focused) {\r\n              e.preventDefault();\r\n              if ((e.which === 8 || e.which === 37) && this.model.crumbs.length) {\r\n                let prevCrumb = this.model.crumbs.length - 2;\r\n                if (prevCrumb >= 0) navigate(this.model.crumbs[prevCrumb]);\r\n              }\r\n            }\r\n          };\r\n\r\n          this.expand = () => {\r\n            if (this.focusedCount <= 1) {\r\n              this.focusedCount += 2;\r\n              this.preventDeFocus = true;\r\n            } else {\r\n              this.preventDeFocus = false;\r\n            }\r\n            this.focused ? this.blur(true) : this.focus();\r\n          };\r\n\r\n          this.focus = () => {\r\n            toggleExpand();\r\n            this.focusedCount++;\r\n            this.focused = true\r\n          };\r\n\r\n          this.blur = (force) => {\r\n            if (!this.preventDeFocus && (force || !this.options.length)) {\r\n              this.expanding = false;\r\n              this.focused = false;\r\n              this.focusedCount = 0;\r\n            }\r\n          };\r\n\r\n          this.hover = category => {\r\n            this.category = category;\r\n            this.preventDeFocus = true;\r\n          };\r\n\r\n          this.hoverOut = () => {\r\n            this.category = '';\r\n            this.preventDeFocus = false;\r\n          };\r\n\r\n          this.select = select.bind(this);\r\n          this.navigate = navigate.bind(this);\r\n\r\n        },\r\n        link(scope, elem, attr, ctrl) {\r\n          scope.treeSelector.model = ctrl;\r\n          elem.attr('class', '');\r\n        }\r\n      }),\r\n    ])\r\n})();"]}